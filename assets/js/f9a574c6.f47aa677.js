"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[288],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},64252:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ally/uploading-files","title":"Upload a file to Ally","description":"Start the process by uploading the file you would like to get feedback for. This is a multipart POST request. The response will contain the statusUrl that you can poll to check whether the file has been processed. If the file was processed previously, a resourceUrl will be provided through which you can fetch the feedback information immediately.","source":"@site/docs/ally/uploading-files.md","sourceDirName":"ally","slug":"/ally/uploading-files","permalink":"/docs/ally/uploading-files","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/ally/uploading-files.md","tags":[],"version":"current","frontMatter":{"title":"Upload a file to Ally","id":"uploading-files","categories":"Ally","published":"","edited":"","author":"Scott Hurrey"},"sidebar":"documentationSidebar","previous":{"title":"Integrate Ally as a Service into your own user interface","permalink":"/docs/ally/ui-integration"},"next":{"title":"Become a Partner!","permalink":"/docs/partners/partners-become_a_partner"}}');var t=s(74848),r=s(28453);const l={title:"Upload a file to Ally",id:"uploading-files",categories:"Ally",published:"",edited:"",author:"Scott Hurrey"},o=void 0,a={},d=[{value:"Supported content types",id:"supported-content-types",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Body Parameters",id:"body-parameters",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Expected response",id:"expected-response",level:2},{value:"Testing with cURL",id:"testing-with-curl",level:3},{value:"Frequently Asked Questions",id:"frequently-asked-questions",level:2},{value:"Upload - input",id:"upload---input",level:3},{value:"Upload - mechanics",id:"upload---mechanics",level:3},{value:"Upload - output",id:"upload---output",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Start the process by uploading the file you would like to get feedback for. This is a multipart POST request. The response will contain the statusUrl that you can poll to check whether the file has been processed. If the file was processed previously, a resourceUrl will be provided through which you can fetch the feedback information immediately."}),"\n",(0,t.jsx)(n.h2,{id:"supported-content-types",children:"Supported content types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PDF files"}),"\n",(0,t.jsx)(n.li,{children:"Microsoft\xae Word files"}),"\n",(0,t.jsx)(n.li,{children:"Microsoft\xae PowerPoint\xae files"}),"\n",(0,t.jsx)(n.li,{children:"OpenOffice/LibreOffice files"}),"\n",(0,t.jsx)(n.li,{children:"Uploaded HTML files"}),"\n",(0,t.jsx)(n.li,{children:"Image files (JPG, JPEG, GIF, PNG, BPM, TIFF)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"POST /api/v2/clients/:clientId/content\n"})}),"\n",(0,t.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clientId"})," - Path parameter - Your Ally Client ID"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"body-parameters",children:"Body Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"file"})," - Post parameter - The binary file data"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"expected-response",children:"Expected response"}),"\n",(0,t.jsx)(n.p,{children:"There are two potential outcomes:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The file is new and will be processed asynchronously. The endpoint will return with a 202 Accepted response and the following response body:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "hash": "UkVBRE1FLm1k...",\n    "status": "pending",\n    "statusUrl": "/api/v2/clients/:clientId/content/UkVBRE1FLm1k.../status,\n    "resourceUrl": null\n}\n'})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Definition"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"hash"}),(0,t.jsx)(n.td,{children:"the content hash used to reference the file by Ally as a Service"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"status"}),(0,t.jsx)(n.td,{children:"the stage of processing the file is in*"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"statusUrl"}),(0,t.jsx)(n.td,{children:"the endpoint to call to check the status"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"resourceUrl"}),(0,t.jsx)(n.td,{children:"the endpoint to retrieve the report or metadata"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"*The following status values can be identified:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"success"}),"\n",(0,t.jsx)(n.li,{children:"pending"}),"\n",(0,t.jsx)(n.li,{children:"inprogress"}),"\n",(0,t.jsx)(n.li,{children:"failed"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The file has been processed before. The endpoint will return a ",(0,t.jsx)(n.code,{children:"303 See Other"})," with a ",(0,t.jsx)(n.code,{children:"Location"})," header to the feedback URL"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"testing-with-curl",children:"Testing with cURL"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl \\\n  -H "Authorization: Bearer myJwtToken" \\\n  -F"file=@test.pdf" https://prod.ally.ac/api/v2/clients/:clientId/content\n'})}),"\n",(0,t.jsx)(n.h2,{id:"frequently-asked-questions",children:"Frequently Asked Questions"}),"\n",(0,t.jsx)(n.p,{children:"This section contains answers to many of the common questions we field as developers are on-boarding to the Ally as a Service API."}),"\n",(0,t.jsx)(n.h3,{id:"upload---input",children:"Upload - input"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: I have questions about the version support for each of these. For instance, which versions of Office are supported?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Office 365, Office 2016, LibreOffice 5.2, LibreOffice 5.4"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: What image file formats are supported?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Most image types whose mimetype starts with image/"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Are there constraints on images: sizes, resolution?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Are there any restrictions on HTML files? What about external references in the HTML files?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"External references will be resolved and included for the HTML accessibility check, but the files themselves will not be checked."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Is there support for HTML archive formats?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Is there any support for archive format: zip, tar?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"upload---mechanics",children:"Upload - mechanics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: We\u2019re posting into an end-point protected with TLS 1.2 or higher, right?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Yes. We use standard AWS security practices (ELBSecurityPolicy-TLS-1-2-2017-01)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Related to the archive question, are we posting the raw file, or is it organized in a multipart/form-data?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Raw Files are uploaded through a multipart upload. One file at a time."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: What\u2019s the maximum file size?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"There is a 50MB file size limit. We're gathering feedback on how large this limit should be to support our customers."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Does the endpoint require a particular encoding?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"UTF-8 is recommended"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Does the POST have to have an accurate Content-Length: header?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Yes"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Do the authentication tokens expire?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: If we had N writers submitting to this API, would each have to have a separate authentication token?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: Can we submit compressed files? No If so, what compression does Ally support?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"None"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: For the 303/See Other response, if we mistakenly permitted two writers to submit the same file in some brief period, would that automatically be caught? How long is that window?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Yes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"upload---output",children:"Upload - output"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: I\u2019m especially surprised to see the (x0,y0,x1,y) notation for errors. Can you tell me more about that?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"These are coordinates for areas in the document that contain some accessibility issue. They are coordinates that correspond to our PDF preview version."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: The output meta data contains \u201cisVersioned\u201d. Is there a standard way to present versions of documents when we post them?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No, see next answer."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Q: The meta data contains a \u201cname\u201d, \u201cdescription\u201d and other parameters. But these are not reflections of arguments in the initial POST. Is this just an indication that there\u2019s a richer set of arguments for the submission phase?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"These parameters are artifacts from our LMS API. They will be removed shortly as they carry no function in a standalone function."}),"\n"]}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);