"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[1339],{15630:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"blackboard/rest-apis/demo-code/python-demo","title":"Demo using Python","description":"The rest demo script demonstrates authenticating a REST application,","source":"@site/docs/blackboard/rest-apis/demo-code/python.md","sourceDirName":"blackboard/rest-apis/demo-code","slug":"/blackboard/rest-apis/demo-code/python-demo","permalink":"/docs/blackboard/rest-apis/demo-code/python-demo","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/blackboard/rest-apis/demo-code/python.md","tags":[],"version":"current","frontMatter":{"title":"Demo using Python","id":"python-demo","categories":"Learn Rest","published":"","edited":"","author":"Mark O\'Neil"},"sidebar":"documentationSidebar","previous":{"title":"Demo using PHP","permalink":"/docs/blackboard/rest-apis/demo-code/php-demo"},"next":{"title":"Tutorial - Build a Java Command Line REST Application","permalink":"/docs/blackboard/rest-apis/demo-code/java-command-line"}}');var a=t(74848),r=t(28453);const i={title:"Demo using Python",id:"python-demo",categories:"Learn Rest",published:"",edited:"",author:"Mark O'Neil"},o=void 0,l={},d=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Assumptions",id:"assumptions",level:3},{value:"Code Walkthrough",id:"code-walkthrough",level:3},{value:"Authorization and Authentication",id:"authorization-and-authentication",level:3},{value:"Calling Services",id:"calling-services",level:3},{value:"Datasources",id:"datasources",level:3},{value:"Terms",id:"terms",level:3},{value:"Courses",id:"courses",level:3},{value:"Users",id:"users",level:3},{value:"Memberships",id:"memberships",level:3},{value:"Conclusion",id:"conclusion",level:3}];function h(e){const n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The rest demo script demonstrates authenticating a REST application,\nmanagement and use of the authorization token, and creating, updating,\ndiscovering, and deleting supported Learn objects."}),"\n",(0,a.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"You must [register a developer account and application](/rest-apis/learn/Getting Started/registry) in the Developer Portal"}),"\n",(0,a.jsx)(n.li,{children:"You must\n[register your application](/rest-apis/learn/Getting Started/registry) in Learn"}),"\n",(0,a.jsx)(n.li,{children:"You must also configure the script as outlined in the README for the project"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This webapp allows you to:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Authenticate"}),"\n",(0,a.jsx)(n.li,{children:"Create, Read, and Update a Data Source"}),"\n",(0,a.jsx)(n.li,{children:"Create, Read, and Update a Term"}),"\n",(0,a.jsx)(n.li,{children:"Create, Read, and Update a Course"}),"\n",(0,a.jsx)(n.li,{children:"Create, Read, and Update a User"}),"\n",(0,a.jsx)(n.li,{children:"Create, Read, and Update a Membership"}),"\n",(0,a.jsx)(n.li,{children:"Delete created objects in reverse order of create - membership, user, course, term, datasource."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"All generated output is sent to the terminal console."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"This is not meant to be a Python tutorial. It will not teach you to write code\nin Python. It will, however, give a Developer familiar with Python the\nknowledge necessary to build a REST-based Web Services integration."})}),"\n",(0,a.jsx)(n.h3,{id:"assumptions",children:"Assumptions"}),"\n",(0,a.jsx)(n.p,{children:"This help topic assumes the Developer:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Is familiar with Python"}),"\n",(0,a.jsxs)(n.li,{children:["Has obtained a copy of the",(0,a.jsx)(n.a,{href:"https://github.com/blackboard/BBDN-REST-DEMO_Python",children:" source code"})," and run as noted in the project ",(0,a.jsx)(n.a,{href:"https://github.com/blackboard/BBDN-REST-DEMO_Python/blob/master/README.md",children:"README.md"})," file."]}),"\n",(0,a.jsx)(n.li,{children:"Has a REST-enabled Learn instance."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"code-walkthrough",children:"Code Walkthrough"}),"\n",(0,a.jsx)(n.p,{children:"To build an integration with the Learn REST Web Services, regardless of\nthe programming language of choice, can really be summed up in two steps:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Use the Application Key and Secret to obtain an OAuth 2.0 access token, as described in the [Basic Authentication](/rest-apis/learn/Getting Started/basic-authentication) document."}),"\n",(0,a.jsx)(n.li,{children:"Call the appropriate REST endpoint with the appropriate data to perform the appropriate action."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"authorization-and-authentication",children:"Authorization and Authentication"}),"\n",(0,a.jsxs)(n.p,{children:["The REST Services rely on OAuth 2.0 Bearer Tokens for authentication. A\nrequest is made to the token endpoint with a Basic Authorization header\ncontaining the base64-encoded key",":secret"," string as its key. The token service\nreturns a JSON object containing the Access Token, the Token Type, and the\nnumber of seconds until the token expires. The token is set to expire after\none hour, and subsequent calls to retrieve the token will return the same\ntoken with an updated expiry time until such time that the token has expired.\nThere is no refresh token and currently no revoke token method."]}),"\n",(0,a.jsx)(n.p,{children:"The Python code handles authentication and token management in the auth class\nin auth.py:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    \xa0\xa0\xa0 def __init__(self, URL):\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.SECRET = \"insert_your_application_key_here\"\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.KEY = \"insert_your_application_secret_here\"\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.CREDENTIALS = 'client_credentials'\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 'grant_type':'client_credentials'\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.TOKEN = None\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.target_url = URL\n    \xa0 ...\n    \xa0\xa0 def setToken(self):\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 oauth_path = '/learn/api/public/v1/oauth2/token'\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 OAUTH_URL = 'https://' + self.target_url + oauth_path\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 if self.TOKEN is None:\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 session = requests.session()\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 session.mount('https://', Tls1Adapter()) # remove for production\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 # Authenticate\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 r = session.post(OAUTH_URL, data=self.PAYLOAD, auth=(self.KEY, self.SECRET), verify=False)\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(\"[auth:setToken()] STATUS CODE: \" + str(r.status_code) )\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(\"[auth:setToken()] RESPONSE: \" + r.text)\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if r.status_code == 200:\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 parsed_json = json.loads(r.text)\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 self.TOKEN = parsed_json['access_token']\n    ...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The JSON response is parsed to retrieve the Token which is stored and\nretrieved for subsequent calls by calling ",(0,a.jsx)(n.code,{children:"auth.getToken()"}),". Note that the\nretrieving the stored token invokes a sanity check on token expiration,\nrequesting a fresh token if nearly expired - see ",(0,a.jsx)(n.code,{children:"auth.getToken()"})," and\n",(0,a.jsx)(n.code,{children:"auth.isExpired()"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"calling-services",children:"Calling Services"}),"\n",(0,a.jsx)(n.p,{children:"The individual service calls are handled by Python in service specific class\nfiles:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"datasource.py"}),"\n",(0,a.jsx)(n.li,{children:"term.py"}),"\n",(0,a.jsx)(n.li,{children:"course.py"}),"\n",(0,a.jsx)(n.li,{children:"user.py"}),"\n",(0,a.jsx)(n.li,{children:"membership.py"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["A sixth file ",(0,a.jsx)(n.code,{children:"constants.py"})," contains a set of constants used by the application."]}),"\n",(0,a.jsx)(n.p,{children:"Each of these classes creates the JSON body when appropriate and then calls\nthe appropriate HTTP Request, and return the JSON response as a String to be\ndisplayed in the terminal console window."}),"\n",(0,a.jsx)(n.p,{children:"In the demo restdemo.py, each of the above objects are called using POST to\ncreate, PATCH to update, GET to read, and DELETE to delete the target object.\nNote that memberships use PUT to create a membership."}),"\n",(0,a.jsxs)(n.p,{children:["End points are generally defined as ",(0,a.jsx)(n.code,{children:"/learn/api/public/v1/<objecttype>/<objectId>"}),". Object ID can be either the pk1, like ",(0,a.jsx)(n.code,{children:"_1_1"}),", or as the batch_uid. This value should be prepended by externalId:, like ",(0,a.jsx)(n.code,{children:"externalId:test101"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["For example, to retrieve a course by the pk1 ",(0,a.jsx)(n.code,{children:"_1_1"}),", you would call ",(0,a.jsx)(n.strong,{children:"GET\n/learn/api/public/v1/courses/_1_1"}),". To retrieve by the batch_uid ",(0,a.jsx)(n.code,{children:"test101"}),",\nyou would call ",(0,a.jsxs)(n.strong,{children:["GET /learn/api/public/v1/courses/externalId",":test101","."]})]}),"\n",(0,a.jsx)(n.p,{children:"Create is sent to Learn as a HTTP POST message with a JSON body that defines\nthe object. The endpoint should omit the objectId, as this will be generated\non creation."}),"\n",(0,a.jsx)(n.p,{children:"Read is sent to Learn as a HTTP GET message with an empty body. The endpoint\nshould include the objectId being retrieved."}),"\n",(0,a.jsx)(n.p,{children:"Update is sent to Learn as a HTTP PATCH message with a JSON body that defines\nthe object. The endpoint should include the objectId being updated."}),"\n",(0,a.jsx)(n.p,{children:"Delete is sent to Learn as a HTTP DELETE message with empty body. The endpoint\nshould include the objectId being deleted."}),"\n",(0,a.jsx)(n.p,{children:"The following shows the key components of the Python code for making REST\nrequests against each of the supported objects. In each case detailed messages\nare printed to the terminal screen for you to follow the process."}),"\n",(0,a.jsx)(n.h3,{id:"datasources",children:"Datasources"}),"\n",(0,a.jsxs)(n.p,{children:["Datasources are handled in ",(0,a.jsx)(n.code,{children:"datasource.py"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Variables and Create Payload"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"     self.DATASOURCES_PATH = '/learn/api/public/v1/dataSources' #create(POST)/get(GET)\n     self.DATASOURCE_PATH = '/learn/api/public/v1/dataSources/externalId:'\n     authStr = 'Bearer ' + token\n    ...\n     self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0 \"externalId\":DSKEXTERNALID,\n    \xa0\xa0\xa0\xa0 \"description\":\"Data Source used for REST demo\"\n     }\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.post(\"https://\" + self.target_url + self.DATASOURCES_PATH, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Read"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.get(\"https://\" + self.target_url + self.DATASOURCE_PATH+DSKEXTERNALID, headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n    ...\n    print(\"[DataSource:getDataSource()] RESPONSE: \" + r.text)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Update"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.patch(\"https://\" + self.target_url + self.DATASOURCE_PATH+DSKEXTERNALID, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n    ...\n    print(\"[DataSource:updateDataSource()] RESPONSE: \" + r.text)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Delete"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.delete(\"https://\" + self.target_url + self.DATASOURCE_PATH+DSKEXTERNALID, headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"terms",children:"Terms"}),"\n",(0,a.jsxs)(n.p,{children:["Terms are handled in ",(0,a.jsx)(n.code,{children:"term.py"}),". This Class contains the methods for creating,\nreading, updating and deleting Term objects."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Variables and Create Payload"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.terms_Path = \'/learn/api/public/v1/terms\' #create(POST)/get(GET)\n    self.term_Path = \'/learn/api/public/v1/terms/externalId:\'\n    self.termExternalId = TERMEXTERNALID #\'BBDN-PYTHON-REST-DEMO-TERM\'\n    authStr = \'Bearer \' + token\n    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0 "externalId":self.termExternalId,\n    \xa0\xa0\xa0\xa0 "dataSourceId": dsk, #self.dskExternalId, Supported soon.\n    \xa0\xa0\xa0\xa0 "name":"REST Demo Term",\n    \xa0\xa0\xa0\xa0 "description": "Term used for REST demo",\n    \xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "duration":"Continuous"\n    \xa0\xa0\xa0\xa0\xa0 }\n    }\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.post(\"https://\" + self.target_url + self.terms_Path, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Read"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    r = session.get("https://" + self.target_url + self.term_Path+self.termExternalId, headers={\'Authorization\':authStr},\xa0 verify=False)\n    ...\n    print("[Term:updateTerm()] RESPONSE: " + r.text)\n    Update\n    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "externalId":self.termExternalId,\n\n# Python Demo\n    \xa0\xa0\xa0\xa0\xa0\xa0 "description": "Term used for REST Python demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "duration":"continuous"\n    \xa0\xa0\xa0\xa0\xa0\xa0 }\n    }\n    ...\n    r = session.patch("https://" + self.target_url + self.term_Path+self.termExternalId, data=json.dumps(self.PAYLOAD), headers={\'Authorization\':authStr, \'Content-Type\':\'application/json\'}, verify=False)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Delete"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.delete(\"https://\" + self.target_url + self.term_Path+self.termExternalId, headers={'Authorization':authStr}, verify=False)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"courses",children:"Courses"}),"\n",(0,a.jsxs)(n.p,{children:["Courses are handled in ",(0,a.jsx)(n.code,{children:"course.py"}),". This class contains the methods for\ncreating, reading, updating and deleting course objects ."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Variables and Create Payload"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.courses_Path = \'/learn/api/public/v1/courses\' #create(POST)/get(GET)\n    self.course_Path = \'/learn/api/public/v1/courses/externalId:\'\n    self.termId = None\n    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "externalId":constants.COURSEEXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId": dsk, #self.dskExternalId, Supported soon.\n    \xa0\xa0\xa0\xa0\xa0\xa0 "courseId":constants.COURSEEXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "name":"Course used for REST demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "description":"Course used for REST demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "allowGuests":"true",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "readOnly": "false",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "duration":"continuous"\n    \xa0\xa0\xa0\xa0\xa0\xa0 }\n    }\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.post(\"https://\" + self.target_url + self.courses_Path, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Read"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    r = session.get("https://" + self.target_url + self.course_Path+constants.COURSEEXTERNALID, headers={\'Authorization\':authStr},\xa0 verify=False)\n    ...\n    print("[Course:getCourse()] RESPONSE: " + r.text)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Update"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "externalId":constants.COURSEEXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId": dsk, #self.dskExternalId, Supported soon.\n    \xa0\xa0\xa0\xa0\xa0\xa0 "courseId":constants.COURSEEXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "name":"Course used for REST Python demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "description":"Course used for REST Python demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "allowGuests":"true",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "readOnly": "false",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "available":"Yes",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "duration":"continuous"\n    \xa0\xa0\xa0\xa0\xa0\xa0 }\n    }\n    r = session.patch("https://" + self.target_url + self.course_Path+constants.COURSEEXTERNALID, data=json.dumps(self.PAYLOAD), headers={\'Authorization\':authStr, \'Content-Type\':\'application/json\'}, verify=False)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Delete"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.delete(\"https://\" + self.target_url + self.course_Path+constants.COURSEEXTERNALID, headers={'Authorization':authStr}, verify=False)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"users",children:"Users"}),"\n",(0,a.jsxs)(n.p,{children:["Users are handled in ",(0,a.jsx)(n.code,{children:"user.py"}),". This class contains the methods for creating,\nreading, updating and deleting user objects ."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Variables and Create Payload"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.users_Path = \'/learn/api/public/v1/users\' #create(POST)/get(GET)\n    self.user_Path = \'/learn/api/public/v1/users/externalId:\'\n    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "externalId":USEREXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId": dsk, #self.dskExternalId, Supported soon.\n    \xa0\xa0\xa0\xa0\xa0\xa0 "userName":"python_demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "password":"python61",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "available": "Yes"\n    \xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0 "name": {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "given": "Python",\n    \xa0\xa0\xa0\xa0\xa0\xa0 "family": "Demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0 "contact": {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "email": "no.one@ereh.won",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }\n    }\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.post(\"https://\" + self.target_url + self.users_Path, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Read"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    r = session.get("https://" + self.target_url + self.user_Path+USEREXTERNALID, headers={\'Authorization\':authStr},\xa0 verify=False)\n    ...\n    print("[User:getUser()] RESPONSE: " + r.text)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Update"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "externalId": USEREXTERNALID,\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId": dsk, #self.dskExternalId, Supported soon.\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "userName":"python_demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "password": "python16",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "available": "Yes"\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "name": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "given": "Python",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "family": "BbDN",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "middle": "Demo",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "contact": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "email": "no.one@ereh.won",\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 }\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }\n    ...\n    r = session.patch("https://" + self.target_url + self.user_Path+USEREXTERNALID, data=json.dumps(self.PAYLOAD), headers={\'Authorization\':authStr, \'Content-Type\':\'application/json\'}, verify=False)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Delete"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.delete(\"https://\" + self.target_url + self.user_Path+USEREXTERNALID, headers={'Authorization':authStr}, verify=False)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"memberships",children:"Memberships"}),"\n",(0,a.jsxs)(n.p,{children:["Memberships (enrollment/staff) are handled in ",(0,a.jsx)(n.code,{children:"membership.py"}),". This class\ncontains the methods for creating, reading, updating and deleting membership\nobjects ."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Variables and Create Payload"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId":dsk, #self.dskExternalId, supported soon.\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "available":"Yes"\n    \xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0 "courseRoleId":"Instructor"\n    }\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.put(\"https://\" + self.target_url + membership_Path, data=json.dumps(self.PAYLOAD), headers={'Authorization':authStr, 'Content-Type':'application/json'}, verify=False)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Read"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    r = session.get("https://" + self.target_url + memberships_Path, headers={\'Authorization\':authStr}, verify=False)\n    ...\n    print("[Membership:getMemberships()] RESPONSE: " + r.text)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Update"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'    self.PAYLOAD = {\n    \xa0\xa0\xa0\xa0\xa0\xa0 "dataSourceId":dsk,\n    \xa0\xa0\xa0\xa0\xa0\xa0 "availability": {\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "available":"No"\n    \xa0\xa0\xa0\xa0\xa0\xa0 },\n    \xa0\xa0\xa0\xa0\xa0\xa0 "courseRoleId":"Student"\n    }\n    ...\n    r = session.patch("https://" + self.target_url + membership_Path, data=json.dumps(self.PAYLOAD), headers={\'Authorization\':authStr, \'Content-Type\':\'application/json\'}, verify=False)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Delete"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"    r = session.delete(\"https://\" + self.target_url + membership_Path, headers={'Authorization':authStr}, verify=False)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsxs)(n.p,{children:["All of the code snippets included in this document are included in a sample\nREST Demo Python command line application available on\n",(0,a.jsx)(n.a,{href:"https://github.com/blackboard/BBDN-REST-DEMO_Python",children:"GitHub"}),".\nThere is a README.html included that talks more specifically running the code.\nFeel free to review the code and run it against a test or development Learn\ninstance to see how it works."]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(96540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);