"use strict";(self.webpackChunkanthology_dev_docs=self.webpackChunkanthology_dev_docs||[]).push([[9946],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},g="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(n),b=r,d=g["".concat(c,".").concat(b)]||g[b]||s[b]||i;return n?o.createElement(d,a(a({ref:t},p),{},{components:n})):o.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[g]="string"==typeof e?e:r,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}b.displayName="MDXCreateElement"},4621:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const i={layout:"post",title:"Enabling Remote Debugging",categories:"Learn b2",id:"archive-b2-resources-enable_remote_debug",author:"Scott Hurrey",status:"deprecated",displayed_sidebar:"documentationSidebar"},a=void 0,l={unversionedId:"archive/b2/resources/archive-b2-resources-enable_remote_debug",id:"archive/b2/resources/archive-b2-resources-enable_remote_debug",title:"Enabling Remote Debugging",description:"This document is deprecated!",source:"@site/docs/archive/b2/resources/enabling-remote-debugging.md",sourceDirName:"archive/b2/resources",slug:"/archive/b2/resources/archive-b2-resources-enable_remote_debug",permalink:"/docs/archive/b2/resources/archive-b2-resources-enable_remote_debug",draft:!1,editUrl:"https://github.com/OneComputerGuy/anthologydevdocs/tree/main/docs/archive/b2/resources/enabling-remote-debugging.md",tags:[],version:"current",frontMatter:{layout:"post",title:"Enabling Remote Debugging",categories:"Learn b2",id:"archive-b2-resources-enable_remote_debug",author:"Scott Hurrey",status:"deprecated",displayed_sidebar:"documentationSidebar"},sidebar:"documentationSidebar"},c={},u=[{value:"Enabling debugging using bb-config.properties",id:"enabling-debugging-using-bb-configproperties",level:3},{value:"Setting up Eclipse for Tomcat Debugging",id:"setting-up-eclipse-for-tomcat-debugging",level:3},{value:"Execute the Debugger",id:"execute-the-debugger",level:3}],p={toc:u},g="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u26a0\ufe0f This document is deprecated!"),(0,r.kt)("h1",{id:"enabling-remote-debugging"},"Enabling Remote Debugging"),(0,r.kt)("p",null,"This tutorial will show you how to enable Tomcat debugging so that you can\nconnect to your Building Block application with a code-level debugger such as\nthose built into Eclipse and NetBeans."),(0,r.kt)("h3",{id:"enabling-debugging-using-bb-configproperties"},"Enabling debugging using bb-config.properties"),(0,r.kt)("p",null,"Newer versions of Blackboard Learn have a built-in flag to enable Tomcat\ndebugging. Follow these steps to turn it on:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open the file /blackboard/config/bb-config.properties in a text editor"),(0,r.kt)("li",{parentName:"ol"},"Modify the value bbconfig.tomcat.debug.enable and set bbconfig.tomcat.debug.enable=true"),(0,r.kt)("li",{parentName:"ol"},"Navigate to /blackboard/tools/admin/ and run PushConfigUpdates.sh/.bat from the command line."),(0,r.kt)("li",{parentName:"ol"},"You can now connect with a debugger to port 2222 (or as set in the value for bbconfig.jvm.options.debug.tomcat)")),(0,r.kt)("h3",{id:"setting-up-eclipse-for-tomcat-debugging"},"Setting up Eclipse for Tomcat Debugging"),(0,r.kt)("p",null,"Remote debugging is project specific in Eclipse. Once you have the building\nblock project created and open you may setup the debugging within Eclipse:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the Eclipse project view tool bar:")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on the upward facing arrow next to the \u201cDebug\u201d button (the button with the bug) in the toolbar and")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on \u201cDebug configurations\u2026\u201d")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Alternatively you may select "Run > Debug configurations\u2026" from the Eclipse menu.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A new window with the current debug configurations will open.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select \u201cRemote Java Application\u201d in the left list of configuration options and then click on \u201cNew launch configuration\u201d button (the button with the folder icon in the top-left corner).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Alternatively you may double-click "Remote Java Application".')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill the configuration with the data corresponding with your Tomcat instance:"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Project: The project you want to debug: it has to contain the source code for the application we want to debug. So include the source in the project build."),(0,r.kt)("li",{parentName:"ul"},"Connection Type: Standard (Socket Attach)."),(0,r.kt)("li",{parentName:"ul"},"Host: IP of the Learn server being used for debugging."),(0,r.kt)("li",{parentName:"ul"},"Port: Port indicated to JVM in ",(0,r.kt)("em",{parentName:"li"},"address")," parameter. Usually port 2222.")),(0,r.kt)("h3",{id:"execute-the-debugger"},"Execute the Debugger"),(0,r.kt)("p",null,"Once you have built and deployed your Building Block you may click on the\nbutton \u201cDebug\u201d and Eclipse will connect with the Learn instance of Tomcat\n(Learn must be running). Now when you put the breakpoints inside the Eclipse\nproject you may debug as you would normally with a regular project only now it\nis remote code running in the Learn Tomcat container."))}s.isMDXComponent=!0}}]);