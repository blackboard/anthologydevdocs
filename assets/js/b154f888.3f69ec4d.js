"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[6777],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(96540);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},74272:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"archive/b2/getting-started/archive-b2-gs-api_overview","title":"B2s and Java Permissions","description":"This document is deprecated!","source":"@site/docs/archive/b2/getting-started/api-overview.md","sourceDirName":"archive/b2/getting-started","slug":"/archive/b2/getting-started/archive-b2-gs-api_overview","permalink":"/docs/archive/b2/getting-started/archive-b2-gs-api_overview","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/archive/b2/getting-started/api-overview.md","tags":[],"version":"current","frontMatter":{"layout":"post","title":"B2s and Java Permissions","categories":"Learn b2","id":"archive-b2-gs-api_overview","author":"Scott Hurrey","status":"deprecated","displayed_sidebar":"documentationSidebar"},"sidebar":"documentationSidebar"}');var i=t(74848),s=t(28453);const o={layout:"post",title:"B2s and Java Permissions",categories:"Learn b2",id:"archive-b2-gs-api_overview",author:"Scott Hurrey",status:"deprecated",displayed_sidebar:"documentationSidebar"},r="B2s and Java Permissions",l={},d=[{value:"Functional Overview",id:"functional-overview",level:2},{value:"Announcement",id:"announcement",level:4},{value:"Authentication",id:"authentication",level:4},{value:"Calendar",id:"calendar",level:4},{value:"Content",id:"content",level:4},{value:"Content System (When licensed)",id:"content-system-when-licensed",level:4},{value:"Context",id:"context",level:4},{value:"Courses",id:"courses",level:4},{value:"Course Categories",id:"course-categories",level:4},{value:"Discussion Board",id:"discussion-board",level:4},{value:"Enrollments",id:"enrollments",level:4},{value:"File System",id:"file-system",level:4},{value:"Gradebook",id:"gradebook",level:4},{value:"Logging",id:"logging",level:4},{value:"Navigation / Course Table of Contents",id:"navigation--course-table-of-contents",level:4},{value:"Plugins",id:"plugins",level:4},{value:"Portal data",id:"portal-data",level:4},{value:"Roles",id:"roles",level:4},{value:"System configuration",id:"system-configuration",level:4},{value:"Users",id:"users",level:4},{value:"Utility classes",id:"utility-classes",level:4}];function c(e){const n={h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f"," This document is deprecated!"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"b2s-and-java-permissions",children:"B2s and Java Permissions"})}),"\n",(0,i.jsx)(n.p,{children:"Building Blocks are capable of fulfilling predominantly, but not exclusively\ntwo scenarios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plugging-in additional or enhanced functionality to the core Blackboard product"}),"\n",(0,i.jsx)(n.li,{children:"Bridging the Blackboard product to an external system"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A Building Block is simply a java based web application that runs on your\nBlackboard application server. Packaged in the web application is an xml\nconfiguration file called the bb-manifest that defines the security\nrestrictions on that particular Building Block as well as where the Building\nBlock hooks into the core product. For Building Blocks that have user\ninterfaces, tag libraries can be used to give the interface Blackboard's\ndistinct look and feel."}),"\n",(0,i.jsx)(n.p,{children:"Building Blocks are used to access, add, remove, and manipulate data within\nthe Learning System. Examples of data types include users, courses, grades,\ncalendar entries, and content items. These objects map to the entities that a\nuser would see represented in the user interface."}),"\n",(0,i.jsx)(n.p,{children:"Accessing and manipulating data involves using a series of loaders and\npersisters that provide the logic and functionality required to save data into\nand read data from the Blackboard Learning System."}),"\n",(0,i.jsx)(n.h2,{id:"functional-overview",children:"Functional Overview"}),"\n",(0,i.jsx)(n.h4,{id:"announcement",children:"Announcement"}),"\n",(0,i.jsx)(n.p,{children:"Announcements are representations of an announcement within the Blackboard\napplication. These can be either system-wide or course-specific in nature.\nBlackboard provides the ability to create, update, and remove announcements."}),"\n",(0,i.jsx)(n.h4,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"The authentication API allows developers to implement a customized\nauthentication scheme other than those that ship with the product. An example\nwould be creating a way to authenticate against a custom central\nauthentication database or other non-LDAP-based authentication service."}),"\n",(0,i.jsx)(n.h4,{id:"calendar",children:"Calendar"}),"\n",(0,i.jsx)(n.p,{children:"Calendar entries represent a calendar entry within the Blackboard application.\nThese can be system-wide, course-specific, or user-specific in nature.\nBlackboard provides the ability to create, update, and remove calendar\nentries."}),"\n",(0,i.jsx)(n.h4,{id:"content",children:"Content"}),"\n",(0,i.jsx)(n.p,{children:"Content refers to files that exist in the various content areas within a given\ncourse site such as presentations or documents. The APIs give you the ability\nto add and remove content, create links to content, create sequentially-\nordered lessons, and access data related to user interaction with a given\npiece of content."}),"\n",(0,i.jsx)(n.h4,{id:"content-system-when-licensed",children:"Content System (When licensed)"}),"\n",(0,i.jsx)(n.p,{children:"The Blackboard Content System allows users to upload and share content within\nthe context of a content management system. The Content System APIs allow\ncontent to be created, bookmarked, tagged with metadata, incorporated into a\nportfolio, and acted on as part of a workflow."}),"\n",(0,i.jsx)(n.h4,{id:"context",children:"Context"}),"\n",(0,i.jsx)(n.p,{children:"The Context allows a developer to access information regarding a given user or\ncourse based on that user's current interactions with the Learning System."}),"\n",(0,i.jsx)(n.h4,{id:"courses",children:"Courses"}),"\n",(0,i.jsx)(n.p,{children:"Courses can be created, updated, deleted, and copied in the same ways that are\npossible with the Snapshot enterprise data integration tool."}),"\n",(0,i.jsx)(n.h4,{id:"course-categories",children:"Course Categories"}),"\n",(0,i.jsx)(n.p,{children:"Course categories allow courses to be categorized according to a given\ntaxonomy. Blackboard provides ways to create, update, and remove course\ncategories."}),"\n",(0,i.jsx)(n.h4,{id:"discussion-board",children:"Discussion Board"}),"\n",(0,i.jsx)(n.p,{children:"Discussion board conferences, forums, threads, and posts can be accessed. You\ncan also determine the status of a given posting and generate statistics on\ndiscussion board usage."}),"\n",(0,i.jsx)(n.h4,{id:"enrollments",children:"Enrollments"}),"\n",(0,i.jsx)(n.p,{children:"Course enrollments can be created, updated, and removed in the same ways that\nare possible with the Snapshot enterprise data integration tool."}),"\n",(0,i.jsx)(n.h4,{id:"file-system",children:"File System"}),"\n",(0,i.jsx)(n.p,{children:"Various directories can be accessed directly giving access to logs, course\ncontent, temp directories, and other areas."}),"\n",(0,i.jsx)(n.h4,{id:"gradebook",children:"Gradebook"}),"\n",(0,i.jsx)(n.p,{children:"Individual gradebook items and scores can be created, updated, and removed."}),"\n",(0,i.jsx)(n.h4,{id:"logging",children:"Logging"}),"\n",(0,i.jsx)(n.p,{children:"Allows access to the core Blackboard logging system including the ability to\ndefine new logs."}),"\n",(0,i.jsx)(n.h4,{id:"navigation--course-table-of-contents",children:"Navigation / Course Table of Contents"}),"\n",(0,i.jsx)(n.p,{children:"Allows the loading of the course table of contents."}),"\n",(0,i.jsx)(n.h4,{id:"plugins",children:"Plugins"}),"\n",(0,i.jsx)(n.p,{children:"Utility class for interacting with Building Blocks on a Blackboard server\ngiving access to information such as which Building Blocks are installed,\nversions of which Blackboard products are installed, and other Building Block\nconfiguration information."}),"\n",(0,i.jsx)(n.h4,{id:"portal-data",children:"Portal data"}),"\n",(0,i.jsx)(n.p,{children:"Allows user-specific module data to be created and updated."}),"\n",(0,i.jsx)(n.h4,{id:"roles",children:"Roles"}),"\n",(0,i.jsx)(n.p,{children:"Allows individual users to be associated with various institution/portal roles\nin the same ways that are possible with the Snapshot enterprise data\nintegration tool."}),"\n",(0,i.jsx)(n.h4,{id:"system-configuration",children:"System configuration"}),"\n",(0,i.jsx)(n.p,{children:"Allows access to server configuration data such as application server name,\nauthentication type enabled, installation directory, database name, and SMTP\nconfiguration."}),"\n",(0,i.jsx)(n.h4,{id:"users",children:"Users"}),"\n",(0,i.jsx)(n.p,{children:"Allows creation, update, and removal of users in the same ways that are\npossible with the Snapshot enterprise data integration tool."}),"\n",(0,i.jsx)(n.h4,{id:"utility-classes",children:"Utility classes"}),"\n",(0,i.jsx)(n.p,{children:"Various classes to support functions such as byte->kilobyte conversion and\nlocalized number representation."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);