"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[4792],{21184:(n,e,a)=>{a.d(e,{A:()=>i});const i=a.p+"assets/images/rest-api-groups-2-7386f2d7d3b78a32ea0a0bb5f571261d.png"},28453:(n,e,a)=>{a.d(e,{R:()=>s,x:()=>o});var i=a(96540);const t={},r=i.createContext(t);function s(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),i.createElement(r.Provider,{value:e},n.children)}},43926:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"blackboard/rest-apis/hands-on/groups-in-rest-api","title":"Working with groups and the API","description":"Using Learn ULTRA on Ultra Course view on Release 3900.34.0-rel.24+41a9160","source":"@site/docs/blackboard/rest-apis/hands-on/groups-and-rest-api.md","sourceDirName":"blackboard/rest-apis/hands-on","slug":"/blackboard/rest-apis/hands-on/groups-in-rest-api","permalink":"/docs/blackboard/rest-apis/hands-on/groups-in-rest-api","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/blackboard/rest-apis/hands-on/groups-and-rest-api.md","tags":[],"version":"current","frontMatter":{"title":"Working with groups and the API","id":"groups-in-rest-api","categories":"Learn REST groups","Author":"Davey Herrera","published":"","edited":""},"sidebar":"documentationSidebar","previous":{"title":"Pulling Gradebook Data and Assessment Grades","permalink":"/docs/blackboard/rest-apis/hands-on/pulling-gradebook-data-and-assessment-grades"},"next":{"title":"Working with Rubrics APIs","permalink":"/docs/blackboard/rest-apis/hands-on/rubrics-apis"}}');var t=a(74848),r=a(28453);const s={title:"Working with groups and the API",id:"groups-in-rest-api",categories:"Learn REST groups",Author:"Davey Herrera",published:"",edited:""},o="Groups in Ultra Experience (C.R.U.D)",l={},d=[{value:"Group sets",id:"group-sets",level:2},{value:"Creating Group sets",id:"creating-group-sets",level:3}];function u(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"Using Learn ULTRA on Ultra Course view on Release 3900.34.0-rel.24+41a9160"}),"\n",(0,t.jsx)(e.p,{children:"On a course, it is possible to create groups to divide students according to the study plan, we have APIs available to perform this task, although this document is written thinking in differentiating Ultra and Original, all group set endpoints work with original, even thought it is displayed in a different way."}),"\n",(0,t.jsx)(e.p,{children:"In case you were wondering, C.R.U.D means:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Create"}),"\n",(0,t.jsx)(e.li,{children:"Read"}),"\n",(0,t.jsx)(e.li,{children:"Update"}),"\n",(0,t.jsx)(e.li,{children:"Delete"}),"\n"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["Please remember to always use ",(0,t.jsx)(e.a,{href:"https://developer.anthology.com/portal/displayApi",children:"https://developer.anthology.com/portal/displayApi"})," as your first source"]}),"\n"]}),"\n",(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"groups-in-ultra-experience-crud",children:"Groups in Ultra Experience (C.R.U.D)"})}),"\n",(0,t.jsx)(e.p,{children:"This is how the group manager looks like in ultra. The groups displayed here are group sets:"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"How group sets look in the GUI",src:a(99515).A+"",width:"1251",height:"688"})}),"\n",(0,t.jsx)(e.p,{children:'And this is how groups look on the GUI within the "New group set 2/18/222":'}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"How groups look withing a group set",src:a(21184).A+"",width:"1251",height:"969"})}),"\n",(0,t.jsx)(e.h2,{id:"group-sets",children:"Group sets"}),"\n",(0,t.jsx)(e.h3,{id:"creating-group-sets",children:"Creating Group sets"}),"\n",(0,t.jsx)(e.p,{children:"It is possible to create a new set sending:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"POST {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets"})}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["And using body (You can use BBML, more about it ",(0,t.jsx)(e.a,{href:"/docs/blackboard/rest-apis/advanced/bbml",children:"here"}),":"]}),"\n",(0,t.jsx)(e.p,{children:"Returns when 200:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "name": "GroupSetFromAPI",\n  "externalId": "enim Duis ea non exercitation",\n  "description": "A description that can use BBML",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6,\n    "signupSheet": {\n      "name": "SignUpSheet Name",\n      "description": "signUpSheet description that can use BBML",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 201 - Created:\n\n```json\n{\n  "id": "_875_1",\n  "externalId": "enim Duis ea non exercitation",\n  "name": "GroupSetFromAPI",\n  "description": "A description that can use BBML",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6\n  },\n  "uuid": "c2a6b04e187646e79c64e740a32d8c5a",\n  "created": "2022-03-01T19:31:27.840Z",\n  "modified": "2022-03-01T19:31:27.840Z"\n}\n``\n\n## Reading group sets\n\nYou can read them by sending:\n\n- `GET {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets`\n\nAnd, since we already have 3 sets it returns when 200:\n\n```json\n{\n  "results": [\n    {\n      "id": "_875_1",\n      "externalId": "enim Duis ea non exercitation",\n      "name": "GroupSetFromAPI",\n      "description": "A description that can use BBML",\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 6\n      },\n      "uuid": "c2a6b04e187646e79c64e740a32d8c5a",\n      "created": "2022-03-01T19:31:27.840Z",\n      "modified": "2022-03-01T19:31:27.840Z"\n    },\n    {\n      "id": "_866_1",\n      "externalId": "7af727199eb941daa96d75f1163b2a89",\n      "name": "New Group Set 2/18/22",\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "b5ff482694114dd7b81df921b9a7ff90",\n      "created": "2022-02-18T20:29:41.965Z",\n      "modified": "2022-02-18T20:29:41.965Z"\n    },\n    {\n      "id": "_870_1",\n      "externalId": "89d999d600814e6db5df26214843b405",\n      "name": "New Group Set 2/28/22",\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "958d29cc470045709dd3bacdacb55ae6",\n      "created": "2022-02-28T20:51:06.986Z",\n      "modified": "2022-02-28T20:51:06.986Z"\n    }\n  ]\n}\n``\n\nIt is also possible to get all the groups, including sets using (check the parents to know which one is a set and which one is a child of that parent, if parentId is null, is because the group is a set.):\n\n- `GET {{baseUrl}}/learn/api/public/v1/courses/:courseId/groups`\n\nReturns when 200:\n\n```json\n{\n  "results": [\n    {\n      "id": "_875_1",\n      "externalId": "enim Duis ea non exercitation",\n      "parentId": null,\n      "name": "GroupSetFromAPI",\n      "description": "A description that can use BBML",\n      "isGroupSet": true,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 6\n      },\n      "uuid": "c2a6b04e187646e79c64e740a32d8c5a"\n    },\n    {\n      "id": "_867_1",\n      "externalId": "2f77cf366064488a94d6778a133c2ba6",\n      "parentId": "_866_1",\n      "name": "New Group 1",\n      "isGroupSet": false,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "de138f580ef34edb8531d48d04e2b0e7"\n    },\n    {\n      "id": "_871_1",\n      "externalId": "fa87d1ca21ae4eee92a1b1a73db9c189",\n      "parentId": "_870_1",\n      "name": "New Group 1",\n      "isGroupSet": false,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "e546b01898f34d1aad8a05d615e9e53f"\n    },\n    {\n      "id": "_868_1",\n      "externalId": "3fec1b86660541d2982c93fe5b51c24f",\n      "parentId": "_866_1",\n      "name": "New Group 2",\n      "isGroupSet": false,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "6e311e235d474e0abd82284a61c5c3f1"\n    },\n    {\n      "id": "_872_1",\n      "externalId": "169b1d4ede8343f6b7ed2e2c93646013",\n      "parentId": "_870_1",\n      "name": "New Group 2",\n      "isGroupSet": false,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "ac3e3617a1a84d1ab7dcb8803d0b671c"\n    },\n    {\n      "id": "_873_1",\n      "externalId": "0ee40767726a4c87875ee7243205dd32",\n      "parentId": "_870_1",\n      "name": "New Group 3",\n      "isGroupSet": false,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "8fb901da7cac4f04a19c6721790d7ec1"\n    },\n    {\n      "id": "_866_1",\n      "externalId": "7af727199eb941daa96d75f1163b2a89",\n      "parentId": null,\n      "name": "New Group Set 2/18/22",\n      "isGroupSet": true,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "b5ff482694114dd7b81df921b9a7ff90"\n    },\n    {\n      "id": "_870_1",\n      "externalId": "89d999d600814e6db5df26214843b405",\n      "parentId": null,\n      "name": "New Group Set 2/28/22",\n      "isGroupSet": true,\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 0\n      },\n      "uuid": "958d29cc470045709dd3bacdacb55ae6"\n    }\n  ]\n}\n``\n\nIn the GUI it looks like this:\n\n![How groups look withing a group set](/assets/img/rest-api-groups-3.png)\n\nTo add groups to a set:\n\n- `POST {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets/:groupId/groups`\n\nAnd in the body:\n\n```json\n{\n  "name": "GroupSetFromAPI First Child",\n  "externalId": "",\n  "description": "BBML CAPABLE",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": -11076931,\n    "signupSheet": {\n      "name": "SignupSheet name",\n      "description": "SignUpSheet description",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 201:\n\n```json\n{\n  "id": "_876_1",\n  "externalId": "b8c68679be084e1581ff3c3f9490f473",\n  "groupSetId": "_875_1",\n  "name": "GroupSetFromAPI First Child",\n  "description": "BBML CAPABLE",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": -11076931\n  },\n  "uuid": "a30a62775ae749a884022f2ffc1bf0b5",\n  "created": "2022-03-02T20:34:46.308Z",\n  "modified": "2022-03-02T20:34:46.500Z"\n}\n``\n\nTo get the group set children of a specific parent:\n\n- `GET {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets/:groupId/groups`\n\nReturns when 200:\n\n```json\n{\n  "results": [\n    {\n      "id": "_876_1",\n      "externalId": "b8c68679be084e1581ff3c3f9490f473",\n      "groupSetId": "_875_1",\n      "name": "GroupSetFromAPI First Child",\n      "description": "BBML CAPABLE",\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": -11076931\n      },\n      "uuid": "a30a62775ae749a884022f2ffc1bf0b5",\n      "created": "2022-03-02T20:34:46.308Z",\n      "modified": "2022-03-02T20:34:46.500Z"\n    }\n  ]\n}\n``\n\n## Update groups and group sets\n\n### Group Sets\n\nYou can update the group set using:\n\n- `PATCH {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets/:groupId`\n\nAnd in the body:\n\n```json\n{\n  "name": "GroupSetFromAPI First Child updated",\n  "externalId": "",\n  "description": "BBML CAPABLE patched",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": -11076931,\n    "signupSheet": {\n      "name": "SignupSheet name patched",\n      "description": "SignUpSheet description patched",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 200\n\n```json\n{\n  "id": "_875_1",\n  "name": "GroupSetFromAPI First Child updated",\n  "description": "BBML CAPABLE patched",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": -11076931\n  },\n  "uuid": "c2a6b04e187646e79c64e740a32d8c5a",\n  "created": "2022-03-01T19:31:27.840Z",\n  "modified": "2022-03-02T21:24:14.198Z"\n}\n``\n\n### Update Groups\n\nYou can update a group by using:\n\n- `PATCH {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId`\n\nBody:\n\n```json\n{\n  "name": "previous name was New Group 3",\n  "description": "A description that can use BBML updated",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6,\n    "signupSheet": {\n      "name": "SignUpSheet Name",\n      "description": "signUpSheet description that can use BBML updated",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 200:\n\n```json\n{\n  "id": "_873_1",\n  "externalId": "0ee40767726a4c87875ee7243205dd32",\n  "groupSetId": "_870_1",\n  "name": "previous name was New Group 3",\n  "description": "A description that can use BBML updated",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6\n  },\n  "uuid": "8fb901da7cac4f04a19c6721790d7ec1",\n  "created": "2022-02-28T20:51:07.710Z",\n  "modified": "2022-03-02T22:01:01.813Z"\n}\n``\n\n## Deleting groups and group sets\n\n### Deleting group sets\n\nYou can remove group sets by using:\n\n- `DELETE {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/sets/:groupId`\n\nReturns 204\n\n``\nNo content\n``\n\n### Deleting groups\n\nYou can remove groups by using:\n\n- `DELETE {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId`\n\nReturns 204\n\n``\nNo content\n``\n\n## Group Memberships (C.R.U.D)\n\nFortunately this is pretty simple to use, there is no post method, but there is PUT:\n\n### Creating Memberships\n\nTo Create a group membership you can use:\n\n(The group id needs to be the group within a set, not the set itself)\n\n- `PUT {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId/users/:userId`\n\nReturns (it just returns the uer id) when 201:\n\n``\n{\n    "userId": "_43755_1"\n}\n``\n\n### Reading Memberships\n\nThis endooint returns only the userId, is useful if you only need to know if the user is part of the group:\n\n- `GET {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId/users/:userId`\n\nReturns when 200:\n\n```json\n{\n  "userId": "_43755_1"\n}\n``\n\n### Deleting Membership\n\nYou can Use:\n\n- `DELETE {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId/users/:userId`\n\nReturns\n\n``\n204 No Content\n``\n\n# Groups in Original Experience (C.R.U.D)\n\nGroups in original experience work in a very similar way as in Ultra, You can also use Group sets in original experience, the endpoints should be the same and should work in the same way as well, the main difference would be in the way they are displayed.\n\nNow, you cannot create stand alone groups in Ultra, meaning, groups cannot be created if there is no group set created first, but in original, you can.\n\n### Creating Groups\n\nYou can create a group using:\n\n- `POST {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups`\n\nAnd the body:\n\n```json\n{\n  "name": "Stand Alone Group in Original",\n  "description": "BBML Group description in original",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 1,\n    "signupSheet": {\n      "name": "SignUp Sheet name for a standalone group in original",\n      "description": "SignUp sheet description for a standalone group in original",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 200:\n\n```json\n{\n  "id": "_882_1",\n  "externalId": "ea9a2336e6444d4b8bdeffb0aa5ce058",\n  "groupSetId": null,\n  "name": "Stand Alone Group in Original",\n  "description": "BBML Group description in original",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 1\n  },\n  "uuid": "71e7f81fb6de4c92b873f04108d51df0",\n  "created": "2022-03-03T15:32:04.410Z",\n  "modified": "2022-03-03T15:32:04.487Z"\n}\n``\n\nReading Groups\n\nYou can either get all groups within a course:\n\n- `GET {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups`\n\nReturns when 200:\n\n```json\n{\n  "results": [\n    {\n      "id": "_882_1",\n      "externalId": "ea9a2336e6444d4b8bdeffb0aa5ce058",\n      "groupSetId": null,\n      "name": "Stand Alone Group in Original",\n      "description": "BBML Group description in original",\n      "availability": {\n        "available": "No"\n      },\n      "enrollment": {\n        "type": "InstructorOnly",\n        "limit": 1\n      },\n      "uuid": "71e7f81fb6de4c92b873f04108d51df0",\n      "created": "2022-03-03T15:32:04.410Z",\n      "modified": "2022-03-03T15:32:04.487Z"\n    }\n  ]\n}\n``\n\nOr get data about only one group:\n\n- `GET {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId`\n\nReturns when 200:\n\n```json\n{\n  "id": "_882_1",\n  "externalId": "ea9a2336e6444d4b8bdeffb0aa5ce058",\n  "groupSetId": null,\n  "name": "Stand Alone Group in Original",\n  "description": "BBML Group description in original",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 1\n  },\n  "uuid": "71e7f81fb6de4c92b873f04108d51df0",\n  "created": "2022-03-03T15:32:04.410Z",\n  "modified": "2022-03-03T15:32:04.487Z"\n}\n``\n\nThis is basically the same but more specific and one less level.\n\n### Updating Groups\n\nTo update a group, you can use:\n\n- `PATCH {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId`\n\nAnd on the body:\n\n```json\n{\n  "name": "previous name was New Group 3",\n  "description": "A description that can use BBML updated",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6,\n    "signupSheet": {\n      "name": "SignUpSheet Name",\n      "description": "signUpSheet description that can use BBML updated",\n      "showMembers": true\n    }\n  }\n}\n``\n\nReturns when 200:\n\n```json\n{\n  "id": "_882_1",\n  "externalId": "ea9a2336e6444d4b8bdeffb0aa5ce058",\n  "groupSetId": null,\n  "name": "previous name was New Group 3",\n  "description": "A description that can use BBML updated",\n  "availability": {\n    "available": "No"\n  },\n  "enrollment": {\n    "type": "InstructorOnly",\n    "limit": 6\n  },\n  "uuid": "71e7f81fb6de4c92b873f04108d51df0",\n  "created": "2022-03-03T15:32:04.410Z",\n  "modified": "2022-03-03T16:59:25.107Z"\n}\n``\n\n### Delete groups\n\nYou can delete groups using:\n\n- `DELETE {{baseUrl}}/learn/api/public/v2/courses/:courseId/groups/:groupId`\n\nIt returns 204:\n\n``\nNo content\n``\n'})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},99515:(n,e,a)=>{a.d(e,{A:()=>i});const i=a.p+"assets/images/rest-api-groups-1-a5d013b8ef28cf20c8586bd335e3520c.png"}}]);