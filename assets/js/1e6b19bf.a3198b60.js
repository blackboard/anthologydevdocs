"use strict";(self.webpackChunkanthology_dev_docs=self.webpackChunkanthology_dev_docs||[]).push([[4828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||l;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={title:"Retrieve the feedback for multiple files",id:"getting-batched-feedback",categories:"Ally",published:"",edited:"",author:"Simon Gaeremynck"},i=void 0,o={unversionedId:"ally/getting-batched-feedback",id:"ally/getting-batched-feedback",title:"Retrieve the feedback for multiple files",description:"The batch endpoint allows you to retrieve content for more than one content hash",source:"@site/docs/ally/get-batched-feedback.md",sourceDirName:"ally",slug:"/ally/getting-batched-feedback",permalink:"/docs/ally/getting-batched-feedback",draft:!1,editUrl:"https://github.com/OneComputerGuy/anthologydevdocs/tree/main/docs/ally/get-batched-feedback.md",tags:[],version:"current",frontMatter:{title:"Retrieve the feedback for multiple files",id:"getting-batched-feedback",categories:"Ally",published:"",edited:"",author:"Simon Gaeremynck"},sidebar:"documentationSidebar",previous:{title:"Feedback parameter definitions",permalink:"/docs/ally/feedback-parameter-definitions"},next:{title:"Retrieve the feedback for a file",permalink:"/docs/ally/getting-feedback"}},c={},s=[{value:"Endpoint",id:"endpoint",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Body Parameters",id:"body-parameters",level:4},{value:"Query Parameters",id:"query-parameters",level:4},{value:"Expected response",id:"expected-response",level:2},{value:"Testing with cURL",id:"testing-with-curl",level:3}],d={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The batch endpoint allows you to retrieve content for more than one content hash"),(0,a.kt)("h2",{id:"endpoint"},"Endpoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /api/v2/clients/:clientId/content/batch\n")),(0,a.kt)("h3",{id:"path-parameters"},"Path Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"clientId")," - Path parameter - Your Ally Client ID")),(0,a.kt)("h4",{id:"body-parameters"},"Body Parameters"),(0,a.kt)("p",null,"The request body is a JSON encoded request of the form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "references": [\n    { "hash": "a1b2c3d..." },\n    { "hash": "QWxseSs..." },\n    { "hash": "e1f2123..." }\n  ]\n}\n')),(0,a.kt)("h4",{id:"query-parameters"},"Query Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"feedback"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Query parameter - Whether feedback information should be returned. Should be true, false or omitted."),(0,a.kt)("li",{parentName:"ul"},"Requires the ",(0,a.kt)("inlineCode",{parentName:"li"},"content:getDetails:withFeedback")," action to be granted in the JWT token before data is release"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"formats"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Query parameter - Whether alternative format information should be returned. Should be true, false or omitted."),(0,a.kt)("li",{parentName:"ul"},"Requires the ",(0,a.kt)("inlineCode",{parentName:"li"},"content:getDetails:withFormats")," action to be granted in the JWT token before data is release")))),(0,a.kt)("h2",{id:"expected-response"},"Expected response"),(0,a.kt)("p",null,"The values in the JSON array will follow the same order as in the submitted request. If no information could be\nretrieved for a content reference, the ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," value will be returned."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"formats=true")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "reports": [\n    null,\n    {\n      "hash": "QWxseSs...",\n      "feedback": null,\n      "formats": {\n        "availableFormats": ["Beeline", "Tts", "Epub", "Braille", "Html"],\n        "canToggleAvailability": false,\n        "available": true,\n        "visibility": true\n      },\n      "metadata": {\n        "name": "Ally+-+One+Pager+-+Higher+Ed+-+General.pdf",\n        "decorative": null,\n        "description": null,\n        "fileType": "pdf",\n        "mimeType": "application/pdf",\n        "isVersioned": false,\n        "isSeizureInducing": false,\n        "libraryReference": null\n      }\n    },\n    null\n  ]\n}\n')),(0,a.kt)("h3",{id:"testing-with-curl"},"Testing with cURL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n  -H "Authorization: Bearer myJwtToken" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"references": [{"hash": "a1b2c3d..."},{"hash": "QWxseSs..."},{"hash": "e1f2123..."}]}\' \\\n  https://prod.ally.ac/api/v2/clients/:clientId/content/bash\n')))}u.isMDXComponent=!0}}]);