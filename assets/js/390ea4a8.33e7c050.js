"use strict";(self.webpackChunkanthology_dev_docs=self.webpackChunkanthology_dev_docs||[]).push([[2622],{4137:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=p(t),m=r,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return t?i.createElement(g,o(o({ref:n},u),{},{components:t})):i.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[c]="string"==typeof e?e:r,o[1]=a;for(var p=2;p<s;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6942:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var i=t(7462),r=(t(7294),t(4137));const s={},o="Originality Reporting",a={unversionedId:"rest-apis/premium-apis/uef/uef-documentation/OriginalityReporting",id:"rest-apis/premium-apis/uef/uef-documentation/OriginalityReporting",title:"Originality Reporting",description:"The Ultra Extension Framework allows an integration to provide Originality",source:"@site/docs/rest-apis/premium-apis/uef/uef-documentation/OriginalityReporting.md",sourceDirName:"rest-apis/premium-apis/uef/uef-documentation",slug:"/rest-apis/premium-apis/uef/uef-documentation/OriginalityReporting",permalink:"/docs/rest-apis/premium-apis/uef/uef-documentation/OriginalityReporting",draft:!1,tags:[],version:"current",frontMatter:{}},l={},p=[{value:"Learn Submission Services Framework",id:"learn-submission-services-framework",level:2},{value:"UEF",id:"uef",level:2},{value:"Originality Report Configuration",id:"originality-report-configuration",level:3},{value:"Saving Configuration",id:"saving-configuration",level:4},{value:"Displaying Originality Results",id:"displaying-originality-results",level:3},{value:"Overall Status",id:"overall-status",level:4},{value:"Report",id:"report",level:4}],u={toc:p},c="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"originality-reporting"},"Originality Reporting"),(0,r.kt)("p",null,"The Ultra Extension Framework allows an integration to provide Originality\nReporting for assignments in Learn Ultra in conjunction with Learn's Submission\nServices framework."),(0,r.kt)("h2",{id:"learn-submission-services-framework"},"Learn Submission Services Framework"),(0,r.kt)("p",null,"The Submission Services framework in Learn exposes extension points for custom\nBuilding Blocks (B2s) to be notified of new gradable content in a course and\nstudents' submissions against those content items. UEF builds on that with APIs\nto support UI integration into Learn Ultra so that those custom extensions from\nLearn B2s can be configured and displayed in Ultra courses. Details about how\nto implement the Learn side of a Submission Services tool in a custom B2 via the\n",(0,r.kt)("inlineCode",{parentName:"p"},"SubmissionService"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SubmittableItemEventHandler"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"ItemSubmissionEventHandler"),"\ninterfaces is outside the scope of this document."),(0,r.kt)("h2",{id:"uef"},"UEF"),(0,r.kt)("p",null,"Each UEF originality reporting extension is linked to its corresponding Submission\nServices extension in Learn by specifying the same unique handle in both places.\nAll Submission Services extensions must provide a unique handle, and any UEF\nextension designed to work with that Learn B2 extension must have the same handle."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"sendMessage({\n  type: 'submission-tool:register',\n  submissionServicesUniqueHandle: '<your_unique_handle>',\n});\n")),(0,r.kt)("p",null,"Learn Ultra discovers available Submission Services tools via its own internal API\nto Learn, and the unique handles provided by Learn are the source of record. UEF\noriginality reporting extensions will only show up in Ultra UI if Learn reports\nthat a Submission Services tool of the same unique handle is available for use on\nthat content item, subject to Learn's built-in mechanisms for B2/tool availability."),(0,r.kt)("h3",{id:"originality-report-configuration"},"Originality Report Configuration"),(0,r.kt)("p",null,"A UEF portal has been added to the Assessment settings panel, in which an\nextension can render its own settings after Originality Reporting is enabled by\nan instructor. The portal's selector is\n",(0,r.kt)("inlineCode",{parentName:"p"},"course.content.assessment.settings.originalityReport.panel.settings"),",\nand will pass along the ",(0,r.kt)("inlineCode",{parentName:"p"},"courseId")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"contentId")," as parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "courseId": "<course_id>",\n  "contentId": "<content_id>"\n}\n')),(0,r.kt)("h4",{id:"saving-configuration"},"Saving Configuration"),(0,r.kt)("p",null,"When the instructor saves the Assessment settings, a UEF message will be passed\nto the extension notifying it that it should save the settings changes made by\nthe instructor, and Ultra will wait for the extension to respond, indicating\nthat the save succeeded or failed. When a successful response is received from\nthe integration, Learn will notify the corresponding B2 of the new Originality\nenablement state for the current content item."),(0,r.kt)("p",null,"The message from Ultra will provide a ",(0,r.kt)("inlineCode",{parentName:"p"},"correlationId")," that will need to be\nprovided when responding to the message, as well as the ",(0,r.kt)("inlineCode",{parentName:"p"},"contentId")," of the item\nbeing saved and its ",(0,r.kt)("inlineCode",{parentName:"p"},"contentHandle")," that indicates its content type. It will also\ninclude the enabled state of the originality report setting:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "eventType": "submission-tool:settings-saved",\n    "correlationId": "<uuid>",\n\n    "contentId": "<content_id>",\n    "contentHandle": "<content_handle>",\n    "enabled": <boolean>\n  }\n}\n')),(0,r.kt)("p",null,"After sending that message to the extension, UEF expects an extension to check\nits rendered DOM and save off the corresponding settings by whatever mechanism\nit communicates to its tool implementation, e.g. via a Rest API provided by the\ncustom Learn B2 that does the Submission Services implementation in Learn."),(0,r.kt)("p",null,"The UEF extension must respond with a success or failure message within 5 seconds:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"sendMessage({\n  type: 'submission-tool:settings-saved:response',\n  correlationId: '<uuid>',\n  success: true,\n});\n\nsendMessage({\n  type: 'submission-tool:settings-saved:response',\n  correlationId: '<uuid>',\n  success: false,\n  // you may supply a human readable error message to display to the user\n  error: 'There was an error saving the configuration',\n});\n")),(0,r.kt)("p",null,"If 5 seconds isn't enough time to save the configuration changes, the extension\ncan request more processing time by responding with a\n",(0,r.kt)("inlineCode",{parentName:"p"},"submission-tool:settings-saved:processing")," message:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"sendMessage({\n  type: 'submission-tool:settings-saved:processing',\n  correlationId: '<uuid>',\n});\n")),(0,r.kt)("h3",{id:"displaying-originality-results"},"Displaying Originality Results"),(0,r.kt)("p",null,"UEF provides two different portals for displaying Originality information."),(0,r.kt)("h4",{id:"overall-status"},"Overall Status"),(0,r.kt)("p",null,"The first portal is for an icon indicating the overall status of each\nsubmission in the submission list and will appear in each submission's row. The\nportal's selector is\n",(0,r.kt)("inlineCode",{parentName:"p"},"components.directives.grade.submission-list-row.originality"),"."),(0,r.kt)("h4",{id:"report"},"Report"),(0,r.kt)("p",null,"Two portals are provided for displaying the results of the Originality report,\none from the grader's perspective and one from the student's. An assignment's\ngrader will see a portal with the selector\n",(0,r.kt)("inlineCode",{parentName:"p"},"components.directives.attempt-grading.originality-report"),",\nand a student will see one with\n",(0,r.kt)("inlineCode",{parentName:"p"},"components.directives.attempt-review.originality-report"),"."))}d.isMDXComponent=!0}}]);