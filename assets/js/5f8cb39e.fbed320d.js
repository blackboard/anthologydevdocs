"use strict";(self.webpackChunkanthology_dev_docs=self.webpackChunkanthology_dev_docs||[]).push([[2171],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=s,f=c["".concat(l,".").concat(m)]||c[m]||p[m]||r;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6810:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(87462),s=(n(67294),n(3905));const r={title:"Use APIs to Work with Ultra Assignments",id:"ultra-assignments",categories:"Learn Rest",published:"",edited:"",author:"Ryan Haber"},o=void 0,i={unversionedId:"blackboard/rest-apis/advanced/ultra-assignments",id:"blackboard/rest-apis/advanced/ultra-assignments",title:"Use APIs to Work with Ultra Assignments",description:"Overview",source:"@site/docs/blackboard/rest-apis/advanced/[review]ultra-assignments.md",sourceDirName:"blackboard/rest-apis/advanced",slug:"/blackboard/rest-apis/advanced/ultra-assignments",permalink:"/docs/blackboard/rest-apis/advanced/ultra-assignments",draft:!1,editUrl:"https://github.com/OneComputerGuy/anthologydevdocs/tree/main/docs/blackboard/rest-apis/advanced/[review]ultra-assignments.md",tags:[],version:"current",frontMatter:{title:"Use APIs to Work with Ultra Assignments",id:"ultra-assignments",categories:"Learn Rest",published:"",edited:"",author:"Ryan Haber"},sidebar:"documentationSidebar",previous:{title:"Use APIs to Merge and Cross-list Courses",permalink:"/docs/blackboard/rest-apis/advanced/crosslist-courses"},next:{title:"Blackboard App for Students Launch Schema",permalink:"/docs/blackboard/rest-apis/advanced/student-launch-schema"}},l={},u=[{value:"Overview",id:"overview",level:3},{value:"Before You Begin",id:"before-you-begin",level:3},{value:"Create an Assignment",id:"create-an-assignment",level:3},{value:"Upload a File to Learn",id:"upload-a-file-to-learn",level:3},{value:"Add Content to an Existing Assignment",id:"add-content-to-an-existing-assignment",level:3},{value:"Assignment-related Query Parameters",id:"assignment-related-query-parameters",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"overview"},"Overview"),(0,s.kt)("p",null,"Learn Ultra experience offers a REST API for managing assessments.\nIn Ultra, an assessment is effectively the same thing as an assignment except\nfor how they are stored internally. In an assessment, there are questions of\nvarious types. Each 'question' is a slot for content that may not actually\ncontain what you normally think of as a question. For more information about\nassignments and questions and how Learn users experience them, see ",(0,s.kt)("a",{parentName:"p",href:"https://help.blackboard.com/learn/Instructor/Ultra/Assignments/Create_and_Edit_Assignments"},"Ultra:\nCreate an Assignment")," in Blackboard Help."),(0,s.kt)("p",null,"An assignment is made up of one or more questions. The following question\ntypes are available for use with Ultra via REST API."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"EitherOr"),' - questions that allow one of two possible responses, such as "true or false"'),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"Essay")," - questions that provide a WYSIWYG editor and allow long text response"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"MultipleAnswer")," - allow students to choose more than one answer"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"Presentation")," - represents a 'question' that only has text and/or attached files referenced from within question.text, but that has no actual answer, points, or evaluation associated with it")),(0,s.kt)("p",null,"As of version 3300.9.0, you can use the public API to read any type of\nquestion. You can use the public API to create, update, and delete methods\nonly with presentation-type questions."),(0,s.kt)("h3",{id:"before-you-begin"},"Before You Begin"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"To work with assignments, you need the entitlements listed for each endpoint in the API reference documents."),(0,s.kt)("li",{parentName:"ul"},"If you want to use a file with a new assignment, you must upload the file to Learn before you create the new assignment.")),(0,s.kt)("h3",{id:"create-an-assignment"},"Create an Assignment"),(0,s.kt)("p",null,"Before you create an assignment, remember that you must first upload any files\nthat you intend to use to create the object."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"If you have not already uploaded any files that you need to use to create the assignment, use the steps in the following section to do so."),(0,s.kt)("li",{parentName:"ol"},"Make a POST request to ",(0,s.kt)("inlineCode",{parentName:"li"},"/learn/api/public/v1/courses/{courseId}/contents/createAssignment"),". See the reference below for more information about using the endpoint. Note that the response body of the request does not return the full assignment object. It returns an object of IDs, one for each of the various resources created by Learn."),(0,s.kt)("li",{parentName:"ol"},"Use the response body to further manage the assignment.")),(0,s.kt)("p",null,"Use these objects to further manage the assignment that you created."),(0,s.kt)("h3",{id:"upload-a-file-to-learn"},"Upload a File to Learn"),(0,s.kt)("p",null,"Before you can use a file with a REST API call, you must use an API upload it\nto Learn."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Make a POST request to /learn/api/public/v1/uploads."),(0,s.kt)("li",{parentName:"ol"},"Use the ID number in the response to further access the uploaded file.")),(0,s.kt)("h3",{id:"add-content-to-an-existing-assignment"},"Add Content to an Existing Assignment"),(0,s.kt)("p",null,'As of 3300.9.0 you can add only presentation-type "questions" to assignments\nusing the public REST API.'),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Make a POST request to /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"You can validate the response body against your original response body."))),(0,s.kt)("h3",{id:"assignment-related-query-parameters"},"Assignment-related Query Parameters"),(0,s.kt)("p",null,"All endpoints accept a query parameter fields that specifies the fields to be\nincluded in the response object, if any. The fields to be included are given\nas a comma-separated list. Specified fields are ignored if absent from the\nresponse. If no fields are specified, all fields are returned in the response.\nFor example:"),(0,s.kt)("p",null,"POST to /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/que\nstions/{questionId}?fields=id,title,status,message"),(0,s.kt)("p",null,"returns the ID and title of questions if the request succeeds because only\nthose fields are included in the success response object. The method returns\nstatus and message if the request fails because only those fields are included\nin the error response object."))}p.isMDXComponent=!0}}]);