"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[4415],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(96540);const a={},l=r.createContext(a);function i(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(l.Provider,{value:n},e.children)}},60637:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ally/getting-batched-feedback","title":"Retrieve the feedback for multiple files","description":"The batch endpoint allows you to retrieve content for more than one content hash","source":"@site/docs/ally/get-batched-feedback.md","sourceDirName":"ally","slug":"/ally/getting-batched-feedback","permalink":"/docs/ally/getting-batched-feedback","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/ally/get-batched-feedback.md","tags":[],"version":"current","frontMatter":{"title":"Retrieve the feedback for multiple files","id":"getting-batched-feedback","categories":"Ally","published":"","edited":"","author":"Simon Gaeremynck"},"sidebar":"documentationSidebar","previous":{"title":"Feedback parameter definitions","permalink":"/docs/ally/feedback-parameter-definitions"},"next":{"title":"Retrieve the feedback for a file","permalink":"/docs/ally/getting-feedback"}}');var a=t(74848),l=t(28453);const i={title:"Retrieve the feedback for multiple files",id:"getting-batched-feedback",categories:"Ally",published:"",edited:"",author:"Simon Gaeremynck"},s=void 0,o={},d=[{value:"Endpoint",id:"endpoint",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Body Parameters",id:"body-parameters",level:4},{value:"Query Parameters",id:"query-parameters",level:4},{value:"Expected response",id:"expected-response",level:2},{value:"Testing with cURL",id:"testing-with-curl",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The batch endpoint allows you to retrieve content for more than one content hash"}),"\n",(0,a.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-http",children:"GET /api/v2/clients/:clientId/content/batch\n"})}),"\n",(0,a.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"clientId"})," - Path parameter - Your Ally Client ID"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"body-parameters",children:"Body Parameters"}),"\n",(0,a.jsx)(n.p,{children:"The request body is a JSON encoded request of the form:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "references": [\n    { "hash": "a1b2c3d..." },\n    { "hash": "QWxseSs..." },\n    { "hash": "e1f2123..." }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"feedback"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Query parameter - Whether feedback information should be returned. Should be true, false or omitted."}),"\n",(0,a.jsxs)(n.li,{children:["Requires the ",(0,a.jsx)(n.code,{children:"content:getDetails:withFeedback"})," action to be granted in the JWT token before data is release"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"formats"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Query parameter - Whether alternative format information should be returned. Should be true, false or omitted."}),"\n",(0,a.jsxs)(n.li,{children:["Requires the ",(0,a.jsx)(n.code,{children:"content:getDetails:withFormats"})," action to be granted in the JWT token before data is release"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"expected-response",children:"Expected response"}),"\n",(0,a.jsxs)(n.p,{children:["The values in the JSON array will follow the same order as in the submitted request. If no information could be\nretrieved for a content reference, the ",(0,a.jsx)(n.code,{children:"null"})," value will be returned."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"formats=true"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "reports": [\n    null,\n    {\n      "hash": "QWxseSs...",\n      "feedback": null,\n      "formats": {\n        "availableFormats": ["Beeline", "Tts", "Epub", "Braille", "Html"],\n        "canToggleAvailability": false,\n        "available": true,\n        "visibility": true\n      },\n      "metadata": {\n        "name": "Ally+-+One+Pager+-+Higher+Ed+-+General.pdf",\n        "decorative": null,\n        "description": null,\n        "fileType": "pdf",\n        "mimeType": "application/pdf",\n        "isVersioned": false,\n        "isSeizureInducing": false,\n        "libraryReference": null\n      }\n    },\n    null\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"testing-with-curl",children:"Testing with cURL"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl \\\n  -H "Authorization: Bearer myJwtToken" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"references": [{"hash": "a1b2c3d..."},{"hash": "QWxseSs..."},{"hash": "e1f2123..."}]}\' \\\n  https://prod.ally.ac/api/v2/clients/:clientId/content/bash\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);