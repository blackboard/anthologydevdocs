"use strict";(self.webpackChunkanthology_dev_docs=self.webpackChunkanthology_dev_docs||[]).push([[7654],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return r?a.createElement(h,s(s({ref:t},c),{},{components:r})):a.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,s=new Array(l);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:n,s[1]=o;for(var p=2;p<l;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2785:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=r(7462),n=(r(7294),r(4137));const l={layout:"post",title:"Check the processing status of a file",id:"rest_apis-ally-check_status",categories:"Ally",author:"Scott Hurrey"},s=void 0,o={unversionedId:"rest-apis/ally/rest_apis-ally-check_status",id:"rest-apis/ally/rest_apis-ally-check_status",title:"Check the processing status of a file",description:"Ally processes files asynchronously. We aim to process files in near-realtime, but some delays might be present. This endpoint can be used to poll for status updates.",source:"@site/docs/rest-apis/ally/check-status.md",sourceDirName:"rest-apis/ally",slug:"/rest-apis/ally/rest_apis-ally-check_status",permalink:"/docs/rest-apis/ally/rest_apis-ally-check_status",draft:!1,tags:[],version:"current",frontMatter:{layout:"post",title:"Check the processing status of a file",id:"rest_apis-ally-check_status",categories:"Ally",author:"Scott Hurrey"},sidebar:"documentationSidebar",previous:{title:"Authorize and Authenticate in Ally",permalink:"/docs/rest-apis/ally/rest_apis-ally-authorization"},next:{title:"Feedback parameter definitions",permalink:"/docs/rest-apis/ally/rest_apis-ally-api_feedback_def"}},i={},p=[{value:"Endpoint",id:"endpoint",level:3},{value:"Path Parameters",id:"path-parameters",level:4},{value:"Body Parameters",id:"body-parameters",level:4},{value:"Query Parameters",id:"query-parameters",level:4},{value:"Expected response",id:"expected-response",level:3},{value:"Testing with cURL",id:"testing-with-curl",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},u=c("VersioningTracker"),d=c("AuthorBox"),m={toc:p},h="wrapper";function y(e){let{components:t,...r}=e;return(0,n.kt)(h,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(u,{frontMatter:l,mdxType:"VersioningTracker"}),(0,n.kt)("h1",{id:"check-the-processing-status-of-a-file"},"Check the processing status of a file"),(0,n.kt)("p",null,"Ally processes files asynchronously. We aim to process files in near-realtime, but some delays might be present. This endpoint can be used to poll for status updates."),(0,n.kt)("h3",{id:"endpoint"},"Endpoint"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-http"},"GET /api/v2/clients/:clientId/content/:contentHash/status\n")),(0,n.kt)("h4",{id:"path-parameters"},"Path Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"clientId")," - Path parameter - Your Ally Client ID"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"contentHash")," - Path parameter - The content hash from the previous endpoint")),(0,n.kt)("h4",{id:"body-parameters"},"Body Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"None")),(0,n.kt)("h4",{id:"query-parameters"},"Query Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"None")),(0,n.kt)("h3",{id:"expected-response"},"Expected response"),(0,n.kt)("p",null,"This endpoint will always return a 200 status code for existing content hashes regardless of whether the file was processed successfully."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hash": "MS4gQWxsI...",\n  "status": "success",\n  "statusUrl": "/api/v2/clients/:clientId/content/MS4gQWxsIH.../status",\n  "resourceUrl": "/api/v2/clients/:clientId/content/MS4gQWxsIH..."\n}\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"hash"),(0,n.kt)("td",{parentName:"tr",align:null},"the content hash used to reference the file by Ally as a Service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"status"),(0,n.kt)("td",{parentName:"tr",align:null},"the stage of processing the file is in","*")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"statusUrl"),(0,n.kt)("td",{parentName:"tr",align:null},"the endpoint to call to check the status")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resourceUrl"),(0,n.kt)("td",{parentName:"tr",align:null},"the endpoint to retrieve the report or metadata")))),(0,n.kt)("p",null,"The following status values can be identified:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"success"),(0,n.kt)("li",{parentName:"ul"},"pending"),(0,n.kt)("li",{parentName:"ul"},"inprogress"),(0,n.kt)("li",{parentName:"ul"},"failed")),(0,n.kt)("h2",{id:"testing-with-curl"},"Testing with cURL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n  -H "Authorization: Bearer myJwtToken" \\\n  https://prod.ally.ac/api/v2/clients/:clientId/content/:contentHash/status\n')),(0,n.kt)(d,{frontMatter:l,mdxType:"AuthorBox"}))}y.isMDXComponent=!0}}]);