"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[9800],{1646:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/lti_message_flow_auth-db6a586e5339a8016eef482d62d5f481.png"},11470:(e,t,n)=>{n.d(t,{A:()=>_});var r=n(96540),i=n(18215),o=n(17559),a=n(23104),s=n(56347),l=n(205),c=n(57485),u=n(31682),d=n(70679);function h(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function f({queryString:e=!1,groupId:t}){const n=(0,s.W6)(),i=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(i),(0,r.useCallback)(e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})},[i,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,o=p(e),[a,s]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o})),[c,u]=f({queryString:n,groupId:i}),[h,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,i]=(0,d.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&i.set(e)},[t,i])]}({groupId:i}),b=(()=>{const e=c??h;return m({value:e,tabValues:o})?e:null})();(0,l.A)(()=>{b&&s(b)},[b]);return{selectedValue:a,selectValue:(0,r.useCallback)(e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)},[u,g,o]),tabValues:o}}var b=n(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function w({className:e,block:t,selectedValue:n,selectValue:r,tabValues:o}){const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const t=e.currentTarget,i=s.indexOf(t),a=o[i].value;a!==n&&(l(t),r(a))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},e),children:o.map(({value:e,label:t,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{s.push(e)},onKeyDown:u,onClick:c,...r,className:(0,i.A)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function y({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function j(e){const t=g(e);return(0,x.jsxs)("div",{className:(0,i.A)(o.G.tabs.container,"tabs-container",v.tabList),children:[(0,x.jsx)(w,{...t,...e}),(0,x.jsx)(y,{...t,...e})]})}function _(e){const t=(0,b.A)();return(0,x.jsx)(j,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var r=n(18215);const i={tabItem:"tabItem_Ymn6"};var o=n(74848);function a({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}},93869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"blackboard/lti/1.3/core/oidc-auth","title":"Authenticating using OIDC","description":"To complete the LTI message flow, we need to perform an OIDC authentication. We will talk about the steps outlined here taken from the original flow image","source":"@site/docs/blackboard/lti/1.3/core/02-authentication.md","sourceDirName":"blackboard/lti/1.3/core","slug":"/blackboard/lti/1.3/core/oidc-auth","permalink":"/docs/blackboard/lti/1.3/core/oidc-auth","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/blackboard/lti/1.3/core/02-authentication.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Authenticating using OIDC","id":"oidc-auth","sidebar_position":2,"published":"2024-09-04","edited":"2024-09-04"},"sidebar":"documentationSidebar","previous":{"title":"LTI Message Launch Flow","permalink":"/docs/blackboard/lti/1.3/core/core-launch"},"next":{"title":"Receiving the id_token","permalink":"/docs/blackboard/lti/1.3/core/idtoken-verification"}}');var i=n(74848),o=n(28453),a=n(11470),s=n(19365);const l={title:"Authenticating using OIDC",id:"oidc-auth",sidebar_position:2,published:"2024-09-04",edited:"2024-09-04"},c=void 0,u={},d=[{value:"The flow",id:"the-flow",level:2},{value:"Next step",id:"next-step",level:2},{value:"Sample code",id:"sample-code",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"To complete the LTI message flow, we need to perform an OIDC authentication. We will talk about the steps outlined here taken from the original flow image"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image of the OIDC authentication part within the LTI workflow",src:n(1646).A+"",width:"1053",height:"718"})}),"\n",(0,i.jsx)(t.h2,{id:"the-flow",children:"The flow"}),"\n",(0,i.jsx)(t.p,{children:"When a user clicks on an LTI link within Learn, the Learn server receives a GET request from the browser with information about that LTI item. Once it loads the tool configuration associated with that link, the first step is to initiate the OIDC Login request with a browser redirect to the registered OIDC Login URI provided by you when you registered your tool on the Developer Portal. The initial login request also passes some information along as query parameters, which, for some of them, must be kept unaltered."}),"\n",(0,i.jsx)(t.p,{children:"The data sent by Learn to the OIDC login endpoint of your tool as query parameters is the following:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"issuer"}),"\n",(0,i.jsxs)(t.li,{children:["login_hint - an opaque value for the tool that must be returned ",(0,i.jsx)(t.strong,{children:"unaltered"})," on the following redirect"]}),"\n",(0,i.jsx)(t.li,{children:"target_link_uri - the URI configured by the tool for this LTI link"}),"\n",(0,i.jsxs)(t.li,{children:["lti_message_hint - an opaque value for the tool that must be returned ",(0,i.jsx)(t.strong,{children:"unaltered"})," on the following redirect"]}),"\n",(0,i.jsx)(t.li,{children:"lti_deployment_id - this is optional, but Learn always sends it"}),"\n",(0,i.jsx)(t.li,{children:"client_id - this is optional, but Learn always sends it"}),"\n",(0,i.jsx)(t.li,{children:"lti_storage_target - for use if cookies aren't possible"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'Once the request is received by your system, you must then redirect to the registered OIDC Authentication Request URI provided by the Developer Portal (shown when the registration process was completed as "OIDC auth request endpoint"), including a Redirect URI (which must be pre-registered) and a state value, along with the other values passed in by the platform. The Redirect URI declares where the tool wants the subsequent LTI launch to go, and the state is what protects against CSRF. The state should be saved in a cookie, so the tool can verify that the initiator of the request is the same browser that sends the LTI message launch. If a cookie cannot work because of browser restrictions preventing the setting of cookies by third parties in iframes, then another option must be pursued, such as lti_storage_target.'}),"\n",(0,i.jsx)(t.p,{children:"The structure of the redirect URI is the following:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"<OIDC-URL>?response_type=id_token&scope=openid&login_hint=<login_hint>&lti_message_hint=<lti_message_hint>&state=<your-state>redirect_uri=<your-redirect-uri>&clientid=<clientid>&nonce=<your-nonce>\n"})}),"\n",(0,i.jsx)(t.p,{children:"Breaking down the query parameters your tool must send on the redirect to the Developer Portal, we have:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"response_type=id_token"})," - This is a fixed value"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"scope=open_id"})," - This is a fixed value"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"login_hint"})," - received as a parameter on the login request from Learn"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"lti_message_hint"})," - received as a parameter on the login request from Learn"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"state"})," - a random value generated by your tool to prevent CRSF attacks"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"nonce"})," - a random value generated by your tool to prevent duplicate requests"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"redirect_uri"})," - a pre-registered URL of your tool where the LTI POST with the data will be sent ",(0,i.jsx)(t.strong,{children:"(MUST BE ENCODED)"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"client_id"})," - The Client ID (or Application ID) of your tool"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{title:"Redirect URI",type:"caution",children:(0,i.jsx)(t.p,{children:"Make sure that the Redirect URI is encoded using URLEncode before redirecting to the OIDC endpoint of the Developer Portal. Failure to encode that value could result in broken workflows"})}),"\n",(0,i.jsx)(t.admonition,{title:"login_hint and lti_message_hint values",type:"danger",children:(0,i.jsxs)(t.p,{children:["The values for the ",(0,i.jsx)(t.code,{children:"login_hint"})," and ",(0,i.jsx)(t.code,{children:"lti_message_hint"})," must be sent to the Developer Portal on the redirect ",(0,i.jsx)(t.strong,{children:"unaltered"}),", since those contain information critical for the workflow and are verified in subsequent calls"]})}),"\n",(0,i.jsx)(t.h2,{id:"next-step",children:"Next step"}),"\n",(0,i.jsx)(t.p,{children:"Once the redirect is completed, the Developer Portal will authenticate the request and redirect again to Learn, requesting the system to create the JWT token and send it to the redirect URI you specified. The process you need to follow will be outlined in the next section"}),"\n",(0,i.jsx)(t.h2,{id:"sample-code",children:"Sample code"}),"\n",(0,i.jsx)(t.p,{children:"Below, you can find sample code that outlines how the OIDC redirect can be performed"}),"\n",(0,i.jsx)(a.A,{children:(0,i.jsx)(s.A,{value:"node",label:"NodeJS/ExpressJS",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",metastring:'title="login.js"',children:'exports.oidcLogin = function(req, res) {\n  const state = uuid.v4(); // save this locally, such as in a cookie; optional in the OIDC spec\n  const nonce = uuid.v4(); // Used to prevent playback\n  const client = // You\'ll need to determine the client ID for this request from parameters on the request\n  const redirectUri = // Get the Redirect URI for this client\n  const oidcAuthUrl = // The URL you were given for this client when you registered your application\n\n  let url =\n    oidcAuthUrl +\n    "?response_type=id_token" +\n    "&scope=openid" +\n    "&login_hint=" +\n    req.query.login_hint +\n    "&lti_message_hint=" +\n    req.query.lti_message_hint +\n    "&state=" +\n    state +\n    "&redirect_uri=" +\n    encodeURIComponent(redirectUri) +\n    "&client_id=" +\n    clientId +\n    "&nonce=" +\n    nonce;\n\n  res.redirect(url);\n};\n'})})})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);