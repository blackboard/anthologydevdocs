"use strict";(globalThis.webpackChunkanthology_dev_docs=globalThis.webpackChunkanthology_dev_docs||[]).push([[1149],{7087:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-4-70ce65db25726a717df29b128162c150.png"},9309:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-6-ce22f93fcae3e1a9ce905d0d244d7a87.png"},12962:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-1-d01cd6fe182d77ae53a7d3b48ea60ddc.png"},14099:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-8-b65a3f45350fcc34682820b514048997.png"},14613:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"blackboard/rest-apis/demo-code/java-command-line","title":"Tutorial - Build a Java Command Line REST Application","description":"The purpose of this document is to allow a developer to walk through the REST","source":"@site/docs/blackboard/rest-apis/demo-code/rest-api-with-java-command-line.md","sourceDirName":"blackboard/rest-apis/demo-code","slug":"/blackboard/rest-apis/demo-code/java-command-line","permalink":"/docs/blackboard/rest-apis/demo-code/java-command-line","draft":false,"unlisted":false,"editUrl":"https://github.com/blackboard/anthologydevdocs/tree/main/docs/blackboard/rest-apis/demo-code/rest-api-with-java-command-line.md","tags":[],"version":"current","frontMatter":{"title":"Tutorial - Build a Java Command Line REST Application","id":"java-command-line","categories":"Learn Rest","published":"","edited":"","author":"Scott Hurrey"},"sidebar":"documentationSidebar","previous":{"title":"Demo using Python","permalink":"/docs/blackboard/rest-apis/demo-code/python-demo"},"next":{"title":"Demo using Ruby","permalink":"/docs/blackboard/rest-apis/demo-code/ruby-demo"}}');var s=n(74848),l=n(28453);const r={title:"Tutorial - Build a Java Command Line REST Application",id:"java-command-line",categories:"Learn Rest",published:"",edited:"",author:"Scott Hurrey"},o=void 0,i={},d=[{value:"About the Project",id:"about-the-project",level:2},{value:"RestConstants",id:"restconstants",level:3},{value:"RestDemo",id:"restdemo",level:3},{value:"UnSecurityUtil",id:"unsecurityutil",level:3},{value:"Usage",id:"usage",level:2},{value:"Step 0: Run Hello Developer",id:"step-0-run-hello-developer",level:3},{value:"What You Should See",id:"what-you-should-see",level:4},{value:"What We Did",id:"what-we-did",level:4},{value:"Step 1: Authorization",id:"step-1-authorization",level:3},{value:"What You Should See",id:"what-you-should-see-1",level:4},{value:"What We Did",id:"what-we-did-1",level:4},{value:"Step 2: Datasources",id:"step-2-datasources",level:3},{value:"What You Should See",id:"what-you-should-see-2",level:4},{value:"What We Did",id:"what-we-did-2",level:4},{value:"Step 3: Terms",id:"step-3-terms",level:3},{value:"What You Should See",id:"what-you-should-see-3",level:4},{value:"What We Did",id:"what-we-did-3",level:4},{value:"Step 4: Remaining Objects",id:"step-4-remaining-objects",level:3},{value:"What You Should See",id:"what-you-should-see-4",level:4},{value:"What We Did",id:"what-we-did-4",level:4}];function c(e){const a={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"The purpose of this document is to allow a developer to walk through the REST\nWorkshop from DevCon 2016. Please note that this sample code was built and\ntested on Mac. It is Java code, and therefore, should be operating system\nagnostic, but it has not been tested on Windows."}),"\n",(0,s.jsx)(a.p,{children:"In order to begin this tutorial, there are a few pre-requisites that are\nassumed to be in place:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["User has installed and started the latest ",(0,s.jsx)(a.a,{href:"/docs/blackboard/sandbox-envs/welcome",children:"Developer AMI"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:["User has installed and configured ",(0,s.jsx)(a.a,{href:"https://git-scm.com/downloads",children:"GIT"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:["User has cloned the ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop",children:"repository"})," to their local working directory."]}),"\n",(0,s.jsx)(a.li,{children:"User has Java 11 installed and configured to JAVA_HOME."}),"\n",(0,s.jsxs)(a.li,{children:["User has registered for an account on the ",(0,s.jsx)(a.a,{href:"https://developer.anthology.com/",children:"Developer Portal"}),", [registered an application](/rest-apis/learn/Getting Started/registry), obtained the key and secret, and [configured](/rest-apis/learn/Getting Started/registry) the Developer Virtual Machine to accept it.."]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["To watch a recording of the corresponding Webinar, click\n",(0,s.jsx)(a.a,{href:"https://us.bbcollab.com/recording/BBAA710721684484425FA10FBA7A1B93",children:"here"}),"."]}),"\n",(0,s.jsx)(a.h2,{id:"about-the-project",children:"About the Project"}),"\n",(0,s.jsx)(a.p,{children:"This project is built on Java 11, in Spring Tool Suite (an Eclipse derivative),\nand uses Gradle and Maven to build and install dependencies. In addition,\nGradle is using the 'Application' plugin, which allows us to build and run the\ncommand line java application with one simple Gradle command -- gradle run."}),"\n",(0,s.jsx)(a.p,{children:"Architecturally, this sample relies on the RestTemplate object offered by the\nSpring Framework for all REST communication. The method or library you choose\nfor your application is very much a personal preference. Internally at\nAnthology, this is the preferred method, and therefore, the method chosen for\nthis workshop."}),"\n",(0,s.jsx)(a.p,{children:"The project contains a base 'Hello Developers' application that contains all\nof the supporting code to get started. The code can all be found in the\nsrc/main/java directory in two base packages, bbdn.unsecurity and bbdn.rest.\nThere are also four top-level folders containing the code we will need to\nimplement each step of the tutorial. Let's break down the base files:"}),"\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:"File"}),(0,s.jsx)(a.th,{children:"Package"}),(0,s.jsx)(a.th,{children:"Description"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"RestConstants.java"}),(0,s.jsx)(a.td,{children:"bbdn.rest"}),(0,s.jsx)(a.td,{children:"This class contains Constant values for running the code."})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"RestDemo.java"}),(0,s.jsx)(a.td,{children:"bbdn.rest"}),(0,s.jsx)(a.td,{children:"This class is the main class for the project. We will discuss other classes as we move them into place, but this is the only file we will modify."})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"UnSecurityUtil.java"}),(0,s.jsx)(a.td,{children:"bbdn.unsecurity"}),(0,s.jsx)(a.td,{children:"This class allows us to create a RestTemplate object based on whether we are testing on the DVM or in an environment with a valid SSL certificate."})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(a.h3,{id:"restconstants",children:"RestConstants"}),"\n",(0,s.jsx)(a.p,{children:"The RestConstants.java file takes the Data I/O requirements out of the sample\ncode, allowing the code to focus on the REST API interactions. In a real-world\napplication, this data would be taken from configuration files or tables and\nUI forms and user input."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'   package bbdn.rest;\n\n   public abstract class RestConstants {\n     public final static String HOSTNAME = "http://localhost:9876";\n     public final static String KEY = "";\n     public final static String SECRET = "";\n     public final static String AUTH_PATH = "/learn/api/public/v1/oauth2/token";\n     public final static String DATASOURCE_PATH = "/learn/api/public/v1/dataSources";\n     public final static String DATASOURCE_ID = "BBDN-DSK-JAVA";\n     public final static String DATASOURCE_DESCRIPTION = "Demo Data Source used for REST Java Demo";\n     public final static String TERM_PATH = "/learn/api/public/v1/terms";\n     public final static String TERM_ID = "BBDN-TERM-JAVA";\n     public final static String TERM_NAME = "REST Demo Term - Java";\n     public final static String TERM_RAW = "Term Used For REST Demo - Java";\n     public final static String TERM_DISPLAY = "Term Used For REST Demo - Java";\n     public final static String COURSE_PATH = "/learn/api/public/v1/courses";\n     public final static String COURSE_ID = "BBDN-Java-REST-Demo";\n     public final static String COURSE_NAME = "Course Used For REST Demo - Java";\n     public final static String COURSE_DESCRIPTION = "Course Used For REST Demo - Java";\n     public final static String USER_PATH = "/learn/api/public/v1/users";\n     public final static String USER_ID = "bbdnrestdemojavauser";\n     public final static String USER_NAME = "restjavauser";\n     public final static String USER_PASS = "Bl@ckb0ard!";\n     public final static String USER_FIRST = "Java";\n     public final static String USER_LAST = "Restdemo";\n     public final static String USER_EMAIL = "developers@anthology.com";\n    }\n'})}),"\n",(0,s.jsx)(a.h3,{id:"restdemo",children:"RestDemo"}),"\n",(0,s.jsx)(a.p,{children:"This is the heart of the application. This contains the main processing loop\nthat performs all of the functions that we want to perform. We will review the\nother classes as we progress through the tutorial, but the code we will write\nlives in this file."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'    package bbdn.rest;\n\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    public class RestDemo {\n\n     private static final Logger log = LoggerFactory.getLogger(RestDemo.class);\n     public static boolean DEVMODE = false;\n\n     public static void main(String[] args) {\n       boolean OPER_ALL = false;\n       boolean OPER_DATASOURCE = false;\n       boolean OPER_TERM = false;\n       boolean OPER_COURSE = false;\n       boolean OPER_USER = false;\n       boolean OPER_MEMBERSHIP = false;\n       boolean OPER_CONTENT = false;\n       boolean OPER_GRADES = false;\n\n       String _hostname = RestConstants.HOSTNAME;\n       int operCount = 0;\n       boolean nextCommand = false;\n       int uriCount = 0;\n       boolean nextUri = false;\n\n       if(args.length > 0) {\n\n       for(int i = 0; i < args.length; i++ ) {\n         log.info("args[" + i + "]: " + args[i]);\n\n         if (nextCommand) {\n           switch(args[i]) {\n             case "datasource":\n               OPER_DATASOURCE = true;\n               break;\n             case "term":\n               OPER_TERM = true;\n               break;\n             case "course":\n               OPER_COURSE = true;\n               break;\n             case "user":\n               OPER_USER = true;\n               break;\n             case "membership":\n               OPER_MEMBERSHIP = true;\n               break;\n             case "content":\n               OPER_CONTENT = true;\n               break;\n             case "grades":\n               OPER_GRADES = true;\n               break;\n             case "all":\n             default:\n               OPER_ALL = true;\n         }\n         nextCommand = false;\n       }\n       if(nextUri) {\n         _hostname = args[i];\n         nextUri = false;\n       }\n\n       if (args[i].equalsIgnoreCase("-c")) {\n         nextCommand = true;\n         operCount += 1;\n       }\n       else if (args[i].equalsIgnoreCase("-t")) {\n         nextUri = true;\n         uriCount += 1;\n       }\n       else if (args[i].equalsIgnoreCase("-d")) {\n         DEVMODE = true;\n       }\n     }\n     if(operCount == 0) {\n       OPER_ALL = true;\n     }\n     log.info(" OPER_ALL: " + OPER_ALL + " OPER_DATASOURCE: " + OPER_DATASOURCE + " OPER_TERM: " + OPER_TERM + " OPER_COURSE: " + OPER_COURSE + " OPER_USER: " + OPER_USER + " OPER_MEMBERSHIP: " + OPER_MEMBERSHIP + " OPER_CONTENT: " + OPER_CONTENT + " OPER_GRADES: " + OPER_GRADES + " HOSTNAME: " + _hostname + " operCount: " + operCount + "uriCount: " + uriCount);\n   }\n   else {\n     OPER_ALL = true;\n   }\n   log.info("Hello REST Workshop Participant!!!");\n  }\n}\n'})}),"\n",(0,s.jsx)(a.h3,{id:"unsecurityutil",children:"UnSecurityUtil"}),"\n",(0,s.jsx)(a.p,{children:"The unSecurityUtil class allows us to bypass SSL Certificate checking when the\n-d flag is passed at the command line. This is useful in test environments and\nspecifically on the Developer Virtual Machine where the SSL certificate is\nself-signed and therefore untrusted by Java."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"package bbdn.unsecurity;\n\nimport java.security.KeyManagementException;\nimport java.security.KeyStoreException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.X509Certificate;\nimport javax.net.ssl.SSLContext;\nimport org.apache.http.conn.ssl.SSLConnectionSocketFactory;\nimport org.apache.http.conn.ssl.TrustStrategy;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\nimport org.springframework.web.client.DefaultResponseErrorHandler;\nimport org.springframework.web.client.RestTemplate;\nimport bbdn.rest.RestDemo;\n\npublic abstract class UnSecurityUtil {\n  public static RestTemplate getRestTemplate() throws KeyManagementException, NoSuchAlgorithmException, KeyStoreException {\n    // Workaround to allow for PATCH requests\n    HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();\n\n    if(RestDemo.DEVMODE) {\n\n      TrustStrategy acceptingTrustStrategy = (X509Certificate[] chain, String authType) -> true;\n\n      SSLContext sslContext = org.apache.http.ssl.SSLContexts.custom()\n        .loadTrustMaterial(null, acceptingTrustStrategy)\n        .build();\n\n      SSLConnectionSocketFactory csf = new SSLConnectionSocketFactory(sslContext);\n\n      CloseableHttpClient httpClient = HttpClients.custom()\n        .setSSLSocketFactory(csf)\n        .build();\n\n      requestFactory.setHttpClient(httpClient);\n    }\n\n    RestTemplate restTemplate = new RestTemplate(requestFactory);\n\n    // Workaround for allowing unsuccessful HTTP Errors to still print to the screen\n    restTemplate.setErrorHandler(new DefaultResponseErrorHandler(){\n      protected boolean hasError(HttpStatus statusCode) {\n        return false;\n    }});\n\n    return(restTemplate);\n  }\n}\n"})}),"\n",(0,s.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(a.p,{children:["The first step is to modify the RestConstants.java file to include your shared\nkey and secret, and, if not using the Developer Virtual Machine, modify\nhostname to your primary test environment. Then simply open the command line,\nnavigate to the directory containing the project, and type ",(0,s.jsx)(a.code,{children:"gradle run"}),". If\nyou do not have Gradle installed, you can use ",(0,s.jsx)(a.code,{children:"./gradlew run"})," instead. This will install gradle in your project directory."]}),"\n",(0,s.jsxs)(a.p,{children:["In addition, the experience can by customized at the command line by\nspecifying command line arguments to be passed to the java application. The\nsyntax for this is ",(0,s.jsx)(a.code,{children:'gradle run -Dexec.args=""'}),". The arguments would appear\njust as they would if typing them directly to the java executable, space-\ndelimited. For example, to run in Devmode, you would type ",(0,s.jsx)(a.code,{children:'gradle run -Dexec.args="-d"'}),". The following table lists the available command line\narguments. They can be combined."]}),"\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:"Arg"}),(0,s.jsx)(a.th,{children:"Description"}),(0,s.jsx)(a.th,{children:"Example"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"-t"}),(0,s.jsx)(a.td,{children:"Specify the target URL. This will override the HOSTNAME constant specified in RestConstants."}),(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:'gradle run -Dexec.args="-t https://localhost:9877'})})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"-d"}),(0,s.jsx)(a.td,{children:"Turn on DevMode. DevMode tells the sample application to ignore certificate errors. Useful when testing on the DVM or against a test/dev server with a self-signed certificate."}),(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:'gradle run -Dexec.args="-d"'})})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"-c"}),(0,s.jsx)(a.td,{children:"Denote a specific object to exercise. Added for example, but not well implemented as each object relies on the previous object to be created and available."}),(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:'gradle run -Dexec.args="-c datasource"'})})]})]})]}),"\n",(0,s.jsx)(a.p,{children:"Available commands are:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"datasource"}),"\n",(0,s.jsx)(a.li,{children:"term"}),"\n",(0,s.jsx)(a.li,{children:"course"}),"\n",(0,s.jsx)(a.li,{children:"user"}),"\n",(0,s.jsx)(a.li,{children:"membership"}),"\n",(0,s.jsx)(a.li,{children:"content *Not Yet Implemented"}),"\n",(0,s.jsx)(a.li,{children:"grades *Not Yet Implemented"}),"\n",(0,s.jsx)(a.li,{children:"all"}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"step-0-run-hello-developer",children:"Step 0: Run Hello Developer"}),"\n",(0,s.jsxs)(a.p,{children:["The first step is to simply run the application. You should have already\ncloned the project to a local directory. Simply open a command line window,\nnavigate to the directory you cloned to and type ",(0,s.jsx)(a.code,{children:"gradle run"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"what-you-should-see",children:"What You Should See"}),"\n",(0,s.jsx)(a.p,{children:"Command line:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Hello World",src:n(12962).A+"",width:"1036",height:"245"})}),"\n",(0,s.jsx)(a.h4,{id:"what-we-did",children:"What We Did"}),"\n",(0,s.jsx)(a.p,{children:"In this step, we simply ran the application to ensure that we had all of our\nlibraries set, that our code ran properly, and that we have gradle installed\nfor our project."}),"\n",(0,s.jsx)(a.h3,{id:"step-1-authorization",children:"Step 1: Authorization"}),"\n",(0,s.jsx)(a.p,{children:"The key to any REST client application, and generally the biggest hurdle to\nadoption, is Authorization. There are a number of flavors out there, and the\nimplementation chosen is often both a personal choice by the developer that\nbuilt the REST API and also a function of the specific requirements and\ninfrastructure around it. For more information regarding Learn's\nimplementation of OAuth2, read the [Basic Authentication](/rest-apis/learn/Getting Started/basic-authentication) in this section."}),"\n",(0,s.jsx)(a.p,{children:'In the "1-Implement-OAuth" folder, you will find three files:'}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/Authorizer.java",children:"Authorizer.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Authorizer is the service handler class. This does the actual work of requesting the token and retrieving the results."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/Token.java",children:"Token.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Token is a JSON Model class. This is what we will use to interact with the token we receive from Learn. Authorizer will request the token, and on receipt, will automatically serialize the JSON response into the Token object, allowing the application to simply interact with it as a normal Java object."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/RestDemo.java",children:"RestDemo.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"The RestDemo class is what our bbdn.rest.RestDemo class will look like when we complete this step in the tutorial."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Let's get started:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:["Move ",(0,s.jsx)(a.code,{children:"/1-Implement-OAuth/Authorizer.java"})," to the ",(0,s.jsx)(a.code,{children:"bbdn.rest"})," package."]}),"\n",(0,s.jsxs)(a.li,{children:["Create a new package called ",(0,s.jsx)(a.code,{children:"bbdn.rest.objects"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:["Move ",(0,s.jsx)(a.code,{children:"/1-Implement-OAuth/Token.java"})," to the ",(0,s.jsx)(a.code,{children:"bbdn.rest.objects"})," package."]}),"\n",(0,s.jsxs)(a.li,{children:["If you want a shortcut, you can copy the ",(0,s.jsx)(a.code,{children:"/1-Implement-OAuth/RestDemo.java"})," file to the ",(0,s.jsx)(a.code,{children:"bbdn.rest"})," package, otherwise open ",(0,s.jsx)(a.code,{children:"bbdn.rest.RestDemo.java"})," and make the following edits:","\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:["Add an import to the top of your RestDemo to include ",(0,s.jsx)(a.code,{children:"bbdn.rest.objects"})," space:"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"    import bbdn.rest.objects.*;\n"})}),"\n",(0,s.jsxs)(a.ol,{start:"2",children:["\n",(0,s.jsx)(a.li,{children:"Now highlight the log statement that prints our hello developer message and replace it with:"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'    // Obtain Bearer Token\n    Authorizer auth = new Authorizer(); // Instantiate Authorizer class\n    Token token = auth.authorize(); // Authorize application and grab the Token object.\n    log.debug("token: " + token.toString());\n'})}),"\n",(0,s.jsxs)(a.ol,{start:"5",children:["\n",(0,s.jsx)(a.li,{children:"Save the file."}),"\n",(0,s.jsxs)(a.li,{children:["At the command line in the project directory, type ",(0,s.jsx)(a.code,{children:"gradle run"})," and watch as the token is printed to the screen."]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Review the ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/RestDemo.java",children:"RestDemo.java"})," in the ",(0,s.jsx)(a.code,{children:"1-Implement-OAuth"})," folder to compare to your RestDemo.java if you have issues."]}),"\n",(0,s.jsx)(a.h4,{id:"what-you-should-see-1",children:"What You Should See"}),"\n",(0,s.jsx)(a.p,{children:"command line:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(61145).A+"",width:"1920",height:"376"})}),"\n",(0,s.jsx)(a.h4,{id:"what-we-did-1",children:"What We Did"}),"\n",(0,s.jsx)(a.p,{children:'So in this step of the tutorial, we took our basic "Hello Developer"\napplication and built out the authorization service and object we need for the\nrest of our application to work properly.'}),"\n",(0,s.jsxs)(a.p,{children:["We first put our REST ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/Authorizer.java",children:"Authorization service"})," in place. So\nwith Basic Authentication and OAuth, there is really a few specific things\nthat we need to do. First, we must hash our key and secret into a\nbase64-encoded string. Once we have the utility in place to generate that\nhash, the first thing to do is build the header. In this application, we are\nusing HttpHeaders. We add the Authorization Header first, in the form of\nAuthorization: Basic <hash>. We then set the content type to form-urlencoded\nusing the HttpHeaders method setContentType. The last thing we need to do is\ndefine the applications scope in the form of grant_type. In Learn's case,\nwe only accept client_credentials, so this part is easy. Simply add\ngrant_type=client_credentials in the body of our POST message and POST it to\nthe oauth/token endpoint."]}),"\n",(0,s.jsxs)(a.p,{children:["The next step was to put our\n",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/Token.java",children:"Token"})," object in place.\nThis object is configured to allow the Jackson library to automatically\nserialize and deserialize our JSON payloads. It provides three basic\nproperties that correspond directly to the JSON payload we expect to receive\nfrom Learn when we request a token: access_token, token_type, and\nexpires_in. Once we have created and populated this object, we can then access\nthis data whenever we need to."]}),"\n",(0,s.jsxs)(a.p,{children:["Lastly, we updated our ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/RestDemo.java",children:"main class"})," in order to call\nthe authorize method and retrieve the token."]}),"\n",(0,s.jsx)(a.h3,{id:"step-2-datasources",children:"Step 2: Datasources"}),"\n",(0,s.jsx)(a.p,{children:"The first -- and easiest -- object to interact with is the Datasource object.\nIt is a rudimentary object with only a few properties that need to be\nmanipulated. It is also a very important object, as most other objects allow\nyou to specify a datasource, which allows you to associate all of the data you\ncreate together and to your application."}),"\n",(0,s.jsx)(a.p,{children:'In the "2-Implement-Datasource" folder, you will find three files:'}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["[DatasourceHandler.java](",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-",children:"https://github.com/blackboard/BBDN-DevCon-REST-"}),"\nWorkshop/blob/master/2-Implement-Datasource/DatasourceHandler.java)","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"DatasourceHandler is the service handler class. This does the actual work of building and processing HTTP requests and handling the incoming responses."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["[Datasource.java](",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-",children:"https://github.com/blackboard/BBDN-DevCon-REST-"}),"\nWorkshop/blob/master/2-Implement-Datasource/Datasource.java)","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Datasource is a JSON Model class. This is what we will use to create datasources and to retrieve datasources from the REST responses we receive from Learn. DatasourceHandler will automatically handle the serialization and deserialization of the datasource object, allowing the application to simply interact with it as a normal Java object."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["[RestDemo.java](",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-",children:"https://github.com/blackboard/BBDN-DevCon-REST-"}),"\nWorkshop/blob/master/2-Implement-Datasource/RestDemo.java).","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"The RestDemo class is what our bbdn.rest.RestDemo class will look like when we complete this step in the tutorial."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Let's get started:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Move /2-Implement-Datasource/Datasource.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Create a new package called bbdn.rest.services."}),"\n",(0,s.jsx)(a.li,{children:"Move /2-Implement-Datasource/DatasourceHandler.java to the bbdn.rest.services package."}),"\n",(0,s.jsxs)(a.li,{children:["If you want a shortcut, you can copy the /2-Implement-Datasource/RestDemo.java file to the bbdn.rest package, otherwise open bbdn.rest.RestDemo.java and make the following edits:","\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Add an import to the top of your RestDemo to include the bbdn.rest.services space:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"    import bbdn.rest.services.*;\n"})}),"\n",(0,s.jsxs)(a.ol,{start:"2",children:["\n",(0,s.jsx)(a.li,{children:"Directly above the Authorizer instantiation, add the following code:"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"    // Declare Datasource\n    Datasource ds = null;\n    // Declare Result to receive Delete response\n    boolean result = false;\n    // Initialize Handlers\n    DatasourceHandler datasourceHandler = new DatasourceHandler(_hostname);\n"})}),"\n",(0,s.jsxs)(a.ol,{start:"3",children:["\n",(0,s.jsx)(a.li,{children:"Directly below the log statement that writes the token information to the screen, add the following code:"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'    // Datasource object\n    if( OPER_ALL || OPER_DATASOURCE) {\n      ds = datasourceHandler.createObject(token.getToken());\n      log.debug("Create DS: " + ds.toString());\n      ds = datasourceHandler.readObject(token.getToken());\n      log.debug("Read DS: " + ds.toString());\n      ds = datasourceHandler.updateObject(token.getToken());\n      log.debug("Update DS: " + ds.toString());\n    }\n    if( OPER_ALL || OPER_DATASOURCE) {\n      result = datasourceHandler.deleteObject(token.getToken());\n      log.debug("Delete DS: " + result);\n    }\n'})}),"\n",(0,s.jsxs)(a.ol,{start:"5",children:["\n",(0,s.jsx)(a.li,{children:"Save the file."}),"\n",(0,s.jsx)(a.li,{children:"At the command line in the project directory, type gradle run (or ./gradlew run) and watch as the token is printed to the screen."}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Review the [RestDemo.java](",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-",children:"https://github.com/blackboard/BBDN-DevCon-REST-"}),"\nWorkshop/blob/master/2-Implement-Datasource/RestDemo.java) in the\n2-Implement-Datasource folder to compare to your RestDemo.java if you have\nissues."]}),"\n",(0,s.jsx)(a.h4,{id:"what-you-should-see-2",children:"What You Should See"}),"\n",(0,s.jsx)(a.p,{children:"For Read:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(64240).A+"",width:"1920",height:"249"})}),"\n",(0,s.jsx)(a.p,{children:"For Update:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(7087).A+"",width:"1920",height:"245"})}),"\n",(0,s.jsx)(a.p,{children:"For Delete:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(45689).A+"",width:"1920",height:"233"})}),"\n",(0,s.jsx)(a.h4,{id:"what-we-did-2",children:"What We Did"}),"\n",(0,s.jsx)(a.p,{children:"So in this step of the tutorial, we added the code necessary to create, read,\nupdate, and delete a datasource."}),"\n",(0,s.jsx)(a.p,{children:"The first step was to put our Datasource object in place. This object is\nconfigured to allow the Jackson library to automatically serialize and\ndeserialize our JSON payloads. It provides three basic properties that\ncorrespond directly to the JSON payload we expect to receive from Learn when we manipulate a datasource: id, name, and description. Once we have\ncreated and populated this object, we can then access this data whenever we\nneed to."}),"\n",(0,s.jsx)(a.p,{children:"Next we implemented our DatasourceHandler service class. This class handles\nthe REST calls, all object generation and retrieval, and passing information\nback to our main class. When the class is initialized, we set up logging and\nmake sure the handler has the correct hostname. Each operation has its own\nmethod that generates the appropriate body if necessary, then passes the\nnecessary data to the sendRequest method to send the appropriate message and\nretrieve the appropriate response."}),"\n",(0,s.jsxs)(a.p,{children:["Lastly, we updated our [main class](",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-",children:"https://github.com/blackboard/BBDN-DevCon-REST-"}),"\nWorkshop/blob/master/1-Implement-OAuth/RestDemo.java) in order to call\nthe appropriate methods to interact with the Datasource Service class."]}),"\n",(0,s.jsx)(a.h3,{id:"step-3-terms",children:"Step 3: Terms"}),"\n",(0,s.jsx)(a.p,{children:"For the third step in our tutorial we will implement the Term object. As with\nDatasources, Terms are also complimentary objects to other operations. At the\nconclusion on this tutorial, we will be setting this Term when we implement\nboth courses and memberships. It is also the first in a more complex set of\nModel objects in that the base Term object requires a secondary Availability\nobject to properly create and manipulate a Term."}),"\n",(0,s.jsx)(a.p,{children:'In the "3-Implement-Term" folder, you will find four files:'}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/3-Implement-Term/TermHandler.java",children:"TermHandler.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"TermHandler is the service handler class. This does the actual work of building and processing HTTP requests and handling the incoming responses."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/3-Implement-Term/Term.java",children:"Term.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Term is a JSON Model class. This is what we will use to create terms and to retrieve terms from the REST responses we receive from Learn. TermHandler will automatically handle the serialization and deserialization of the term object, allowing the application to simply interact with it as a normal Java object."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/3-Implement-Term/Availability.java",children:"Availability.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:'Availability is also a model class. This class contains one field, "available," which will be set to yes or now. This class is only called from within the Term class, and this is what allows Jackson to handle the serialization and deserialization of complex nested objects.'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/3-Implement-Term/RestDemo.java",children:"RestDemo.java"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"The RestDemo class is what our bbdn.rest.RestDemo class will look like when we complete this step in the tutorial."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Let's get started:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Move /3-Implement-Term/TermHandler.java to the bbdn.rest.services package."}),"\n",(0,s.jsx)(a.li,{children:"Move /3-Implement-Term/Term.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /3-Implement-Term/Availability.java to the bbdn.rest.objects package."}),"\n",(0,s.jsxs)(a.li,{children:["If you want a shortcut, you can copy the /3-Implement-Term/RestDemo.java file to the bbdn.rest package, otherwise open bbdn.rest.RestDemo.java and make the following edits:","\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:["Directly below ",(0,s.jsx)(a.em,{children:"Datasource ds = null;"}),", add:"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"    Term tm = null;\n"})}),"\n",(0,s.jsxs)(a.ol,{start:"2",children:["\n",(0,s.jsxs)(a.li,{children:["Directly below ",(0,s.jsx)(a.em,{children:"DatasourceHandler datasourceHandler = new DatasourceHandler(_hostname);"}),", add:"]}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"    TermHandler termHandler = new TermHandler(_hostname);\n"})}),"\n",(0,s.jsxs)(a.ol,{start:"3",children:["\n",(0,s.jsxs)(a.li,{children:["Between the closing curly bracket for the first ",(0,s.jsx)(a.code,{children:"if( OPER_ALL || OPER_DATASOURCE) {"})," and the start of the second, add:"]}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'    // Term object\n    if( OPER_ALL || OPER_TERM) {\n      tm = termHandler.createObject(token.getToken(), ds.getId());\n      log.debug("Create TM: " + tm.toString());\n      tm = termHandler.readObject(token.getToken());\n      log.debug("Read TM: " + tm.toString());\n      tm = termHandler.updateObject(token.getToken(), ds.getId());\n      log.debug("Update TM: " + tm.toString());\n    }\n\n    // Delete objects\n    if( OPER_ALL || OPER_TERM) {\n      result = termHandler.deleteObject(token.getToken());\n      log.debug("Delete TM: " + result);\n    }\n'})}),"\n",(0,s.jsxs)(a.ol,{start:"5",children:["\n",(0,s.jsx)(a.li,{children:"Save the file."}),"\n",(0,s.jsx)(a.li,{children:"At the command line in the project directory, type gradle run (or ./gradlew run) and watch as the token is printed to the screen."}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Review the ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/1-Implement-OAuth/RestDemo.java",children:"RestDemo.java"})," in the\n3-Implementing-Term folder to compare to your RestDemo.java if you have\nissues."]}),"\n",(0,s.jsx)(a.h4,{id:"what-you-should-see-3",children:"What You Should See"}),"\n",(0,s.jsx)(a.p,{children:"For Create:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(9309).A+"",width:"1920",height:"264"})}),"\n",(0,s.jsx)(a.p,{children:"For Read:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(88180).A+"",width:"1920",height:"247"})}),"\n",(0,s.jsx)(a.p,{children:"For Update:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(14099).A+"",width:"1920",height:"246"})}),"\n",(0,s.jsx)(a.p,{children:"For Delete:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(58890).A+"",width:"1920",height:"190"})}),"\n",(0,s.jsx)(a.h4,{id:"what-we-did-3",children:"What We Did"}),"\n",(0,s.jsx)(a.p,{children:"So in this step of the tutorial, we added the code necessary to create, read,\nupdate, and delete a term."}),"\n",(0,s.jsx)(a.p,{children:"The first step was to put our Term object in place, along with its companion\nAvailability object. This object is actually re-used by other classes we will\nimplement in the final step. These objects are configured to allow the Jackson\nlibrary to automatically serialize and deserialize our JSON payloads. It\nprovides the basic properties that correspond directly to the JSON payload we\nexpect to receive from Learn when we manipulate a term. Once we\nhave created and populated this object, we can then access this data whenever\nwe need to."}),"\n",(0,s.jsx)(a.p,{children:"Next we implemented our TermHandler service class. This class handles the REST\ncalls, all object generation and retrieval, and passing information back to\nour main class. When the class is initialized, we set up logging and make sure\nthe handler has the correct hostname. Each operation has its own method that\ngenerates the appropriate body if necessary, then passes the necessary data to\nthe sendRequest method to send the appropriate message and retrieve the\nappropriate response."}),"\n",(0,s.jsxs)(a.p,{children:["Lastly, we updated our ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/3-Implement-Term/RestDemo.java",children:"main class"})," in order to call\nthe appropriate methods to interact with the Term Service class."]}),"\n",(0,s.jsx)(a.h3,{id:"step-4-remaining-objects",children:"Step 4: Remaining Objects"}),"\n",(0,s.jsx)(a.p,{children:"The remainder of the tutorial is really just about moving the remaining\nobjects and handlers in place and repeating the previously established pattern\nin the RestDemo class."}),"\n",(0,s.jsx)(a.p,{children:'In the "4-Implement-Remaining-Objects" folder, you will find a plethora of\nfiles. You will also notice a familiar pattern:'}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"<Object>Handler classes are the service handler classes for their respective objects. As before, these do the actual work of manipulating objects and retrieving the results."}),"\n",(0,s.jsx)(a.li,{children:"Classes named after objects are JSON Model classes. These are what we will use to interact with the JSON we receive from Learn. The handler classes will handle the REST API interaction, and automatically serialize and deserialize the JSON payloads into the corresponding object, allowing the application to simply interact with it as a normal Java object."}),"\n",(0,s.jsx)(a.li,{children:"Several of these model classes are nested objects for other base classes."}),"\n",(0,s.jsx)(a.li,{children:"The RestDemo class is what our bbdn.rest.RestDemo class will look like when we complete this step in the tutorial."}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Let's get started:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/CourseHandler.java to the bbdn.rest.services package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/UserHandler.java to the bbdn.rest.services package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/MembershipHandler.java to the bbdn.rest.services package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/Course.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/User.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/Membership.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/Contact.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/Name.java to the bbdn.rest.objects package."}),"\n",(0,s.jsx)(a.li,{children:"Move /4-Implement-Remaining-Objects/RestDemo.java to the bbdn.rest package."}),"\n",(0,s.jsx)(a.li,{children:"At the command line in the project directory, type gradle run (or ./gradlew run) and watch as the token is printed to the screen."}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Review the ",(0,s.jsx)(a.a,{href:"https://github.com/blackboard/BBDN-DevCon-REST-Workshop/blob/master/4-Implement-Remaining-Objects/RestDemo.java",children:"RestDemo.java"})," in\nthe 4-Implement-Remaining-Objects folder to compare to your RestDemo.java if\nyou have issues."]}),"\n",(0,s.jsx)(a.h4,{id:"what-you-should-see-4",children:"What You Should See"}),"\n",(0,s.jsx)(a.p,{children:"Command line:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"shurreymbp:BBDN-DevCon-REST-Workshop shurrey$ cp 4-Implement-Remaining-Objects/RestDemo.java src/main/java/bbdn/rest/\nshurreymbp:BBDN-DevCon-REST-Workshop shurrey$ gradle run\n:compileJava\n:processResources UP-TO-DATE\n:classes\n:run\n[main] INFO bbdn.rest.Authorizer - Value to hash: d03caa33-1095-47b9-bc67-f5cd634430b1:QSFClAMu5KmoG8yFbHTi7pjhsseJl4uz\n[main] INFO bbdn.rest.Authorizer - Hashed Value: ZDAzY2FhMzMtMTA5NS00N2I5LWJjNjctZjVjZDYzNDQzMGIxOlFTRkNsQU11NUttb0c4eUZiSFRpN3BqaHNzZUpsNHV6\n[main] INFO bbdn.rest.Authorizer - Request Headers: {Authorization=[Basic ZDAzY2FhMzMtMTA5NS00N2I5LWJjNjctZjVjZDYzNDQzMGIxOlFTRkNsQU11NUttb0c4eUZiSFRpN3BqaHNzZUpsNHV6], Content-Type=[application/x-www-form-urlencoded]}\n[main] INFO bbdn.rest.Authorizer - Request Body:grant_type=client_credentials\n[main] INFO bbdn.rest.Authorizer - Response: <200 OK,Token{access_token=uC5G2HvEsI1DWP24xD2lnaG35EQsenZs', token_type=bearer', expires_in=1639},{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:05 GMT], Expires=[Mon, 27 Jul 2015 19:50:05 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=5457EE8C14E1C940EE662CE047A3DF31; Path=/learn/api],X-Blackboard-Context-Version=[3000.1.1-rel.5+7a1d308], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed,27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.Authorizer - Access Token: Token{access_token=uC5G2HvEsI1DWP24xD2lnaG35EQsenZs', token_type=bearer',\nexpires_in=1639}\n[main] INFO bbdn.rest.services.DatasourceHandler - CREATE\n[main] INFO bbdn.rest.services.DatasourceHandler - URI is http://localhost:9876/learn/api/public/v1/dataSources\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Headers:{Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Body: Datasource [id=null, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null,extrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - Response: <201 Created,Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:06 GMT], Expires=[Mon, 27 Jul 2015 19:50:06 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=0BEAD73C4DFFC8C01B037883D467B533; Path=/learn/api], Location=[/learn/api/public/v1/dataSources/_13_1],X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed,27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.services.DatasourceHandler - Datasource: Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null,extrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - READ\n[main] INFO bbdn.rest.services.DatasourceHandler - URI is http://localhost:9876/learn/api/public/v1/dataSources/externalId:BBDN-DSK-JAVA\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Body: Datasource [id=null, externalId=null, description=null, status=null, code=null,message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - Response: <200 OK,Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1],P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache],Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:06 GMT], Expires=[Mon, 27 Jul 2015 19:50:06 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=5DDDADB64296A3E350B157B6D44B7B7F;Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab],Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked],Date=[Wed, 27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.services.DatasourceHandler - Datasource: Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null,\nextrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - UPDATE\n[main] INFO bbdn.rest.services.DatasourceHandler - URI is http://localhost:9876/learn/api/public/v1/dataSources/externalId:BBDN-DSK-JAVA\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Body: Datasource [id=null, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - Response: <200 OK,Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:06 GMT], Expires=[Mon, 27 Jul 2015 19:50:06 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=F8464644EAA806822A7121A3AAEE0531;Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab],Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked],Date=[Wed, 27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.services.DatasourceHandler - Datasource: Datasource [id=_13_1, externalId=BBDN-DSK-JAVA, description=Demo Data Source used for REST Java Demo, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - CREATE\n[main] INFO bbdn.rest.services.TermHandler - URI is http://localhost:9876/learn/api/public/v1/terms\n[main] INFO bbdn.rest.services.TermHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.TermHandler - Request Body: Term [id=null, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - Response: <201 Created,Term [id=_7_1, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=2498E5AC7B7F40B9B4A53BFCC3762029; Path=/learn/api], Location=[/learn/api/public/v1/terms/_7_1], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed,27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.services.TermHandler - Term: Term [id=_7_1,externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - READ\n[main] INFO bbdn.rest.services.TermHandler - URI is [http://localhost:9876/learn/api/public/v1/terms/externalId:BBDN-TERM-JAVA\n[main] INFO bbdn.rest.services.TermHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.TermHandler - Request Body: Term [id=null, externalId=null, dataSourceId=null, name=null, description=null, availability=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - Response: <200 OK,Term [id=_7_1, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=4341909E1D54C7A129E5883CE21E82E0; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:06 GMT]}>\n[main] INFO bbdn.rest.services.TermHandler - Term: Term [id=_7_1, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - UPDATE\n[main] INFO bbdn.rest.services.TermHandler - URI is http://localhost:9876/learn/api/public/v1/terms/externalId:BBDN-TERM-JAVA\n[main] INFO bbdn.rest.services.TermHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.TermHandler - Request Body: Term [id=null, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - Response: <200 OK,Term [id=_7_1, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=097D9AF4FF4AAE88C29BD42C9AA0526B; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.TermHandler - Term: Term [id=_7_1, externalId=BBDN-TERM-JAVA, dataSourceId=_13_1, name=REST Demo Term - Java, description=Term Used For REST Demo - Java, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - CREATE\n[main] INFO bbdn.rest.services.CourseHandler - Course [id=null, uuid=null, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=null, organization=false, ultraStatus=null, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - URI is http://localhost:9876/learn/api/public/v1/courses\n[main] INFO bbdn.rest.services.CourseHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.CourseHandler - Request Body: Course [id=null, uuid=null, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=null, organization=false, ultraStatus=null, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - Response: <201 Created,Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=54A6544B4CDB9B039EFA56487A85035B; Path=/learn/api], Location=[/learn/api/public/v1/courses/_7_1], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.CourseHandler - Course: Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - READ\n[main] INFO bbdn.rest.services.CourseHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo\n[main] INFO bbdn.rest.services.CourseHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.CourseHandler - Request Body: Course [id=null, uuid=null, externalId=null, dataSourceId=null, courseId=null, name=null, description=null, created=null, organization=false, ultraStatus=null, allowGuests=false, readOnly=false, termId=null, availability=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - Response: <200 OK,Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=DF5C615760A8438DFF112613D84926EF; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.CourseHandler - Course: Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - UPDATE\n[main] INFO bbdn.rest.services.CourseHandler - Course [id=null, uuid=null, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=null, organization=false, ultraStatus=null, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo\n[main] INFO bbdn.rest.services.CourseHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.CourseHandler - Request Body: Course [id=null, uuid=null, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=null, organization=false, ultraStatus=null, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - Response: <200 OK,Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=64C50ECFDE762D6C97C5409AB26DF00B; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.CourseHandler - Course: Course [id=_7_1, uuid=9ec59f4d3e094cd5b2025858a28a3b39, externalId=BBDN-Java-REST-Demo, dataSourceId=_13_1, courseId=BBDN-Java-REST-Demo, name=Course Used For REST Demo - Java, description=Course Used For REST Demo - Java, created=2016-07-27T19:50:07.376Z, organization=false, ultraStatus=Classic, allowGuests=true, readOnly=false, termId=_7_1, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - CREATE\n[main] INFO bbdn.rest.services.UserHandler - User [id=null, uuid=null, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=Bl@ckb0ard!, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - URI is http://localhost:9876/learn/api/public/v1/users\n[main] INFO bbdn.rest.services.UserHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.UserHandler - Request Body: User [id=null, uuid=null, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=Bl@ckb0ard!, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [[email=developers@anthology.com](mailto:email=developers@anthology.com)], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - Response: <201 Created,User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:07 GMT], Expires=[Mon, 27 Jul 2015 19:50:07 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=679348D067502E72AD1ECAD13B33322E; Path=/learn/api], Location=[/learn/api/public/v1/users/_9_1], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.UserHandler - User: User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - READ\n[main] INFO bbdn.rest.services.UserHandler - URI is http://localhost:9876/learn/api/public/v1/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.UserHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.UserHandler - Request Body: User [id=null, uuid=null, externalId=null, dataSourceId=null, userName=null, password=null, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=null, name=null, contact=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - Response: <200 OK,User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=6754BF5FA616BB198CC2118EC1E3F5CB; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed,27 Jul 2016 19:50:07 GMT]}>\n[main] INFO bbdn.rest.services.UserHandler - User: User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - UPDATE\n[main] INFO bbdn.rest.services.UserHandler - User [id=null, uuid=null, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=Bl@ckb0ard!, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - URI is http://localhost:9876/learn/api/public/v1/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.UserHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.UserHandler - Request Body: User [id=null, uuid=null, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=Bl@ckb0ard!, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - Response: <200 OK,User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=D8AC51CE6341F1C29832F9B9764C1A74; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:08 GMT]}>\n[main] INFO bbdn.rest.services.UserHandler - User: User [id=_9_1, uuid=c55303eaa7d541aab75ebd218d1a6e20, externalId=bbdnrestdemojavauser, dataSourceId=_13_1, userName=restjavauser, password=null, studentId=null, educationLevel=Unknown, gender=Unknown, birthDate=null, created=2016-07-27T19:50:07.970Z, lastLogin=null, availability=Availability [available=Yes], name=Name [given=Java, family=Restdemo], contact=Contact [email=developers@anthology.com], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - CREATE\n[main] INFO bbdn.rest.services.MembershipHandler - Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=null, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - URI is [http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.MembershipHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.MembershipHandler - Request Body: Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=null, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - Response: <201 Created,Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=6BCBBFC919575F4FA108817EF78FFC73; Path=/learn/api], Location=[/learn/api/public/v1/courses/_7_1/users/_9_1], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:08 GMT]}>\n[main] INFO bbdn.rest.services.MembershipHandler - Membership: Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - READ\n[main] INFO bbdn.rest.services.MembershipHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.MembershipHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.MembershipHandler - Request Body: Membership [userId=null, courseId=null, dataSourceId=null, created=null, courseRoleId=null, availability=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - Response: <200 OK,Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9],Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=64E622F16D37FF787E3319321D9B3740; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:08 GMT]}>\n[main] INFO bbdn.rest.services.MembershipHandler - Membership: Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - UPDATE\n[main] INFO bbdn.rest.services.MembershipHandler - Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=null, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.MembershipHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.MembershipHandler - Request Body: Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=null,courseRoleId=Instructor, availability=Availability [available=Yes],status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - Response: <200 OK,Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null],{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN], Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=C26CD9BF1C6D987BEF83B8BFB2508692; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Transfer-Encoding=[chunked], Date=[Wed, 27 Jul 2016 19:50:08 GMT]}>\n[main] INFO bbdn.rest.services.MembershipHandler - Membership: Membership [userId=_9_1, courseId=_7_1, dataSourceId=_13_1, created=2016-07-27T19:50:08.539Z, courseRoleId=Instructor, availability=Availability [available=Yes], status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - DELETE\n[main] INFO bbdn.rest.services.MembershipHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.MembershipHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.MembershipHandler - Request Body: Membership [userId=null, courseId=null, dataSourceId=null, created=null, courseRoleId=null, availability=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.MembershipHandler - Response: <204 No Content,{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482; 3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:08 GMT], Expires=[Mon, 27 Jul 2015 19:50:08 GMT], X-Frame-Options=[SAMEORIGIN],Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=614DC8400A97E7A1EE8A5D84FB5C91F9; Path=/learn/api],X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Date=[Wed, 27 Jul 2016 19:50:08 GMT]}>\n[main] INFO bbdn.rest.services.UserHandler - DELETE\n[main] INFO bbdn.rest.services.UserHandler - URI is http://localhost:9876/learn/api/public/v1/users/externalId:bbdnrestdemojavauser\n[main] INFO bbdn.rest.services.UserHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.UserHandler - Request Body: User [id=null, uuid=null, externalId=null, dataSourceId=null, userName=null, password=null, studentId=null, educationLevel=null, gender=null, birthDate=null, created=null, lastLogin=null, availability=null, name=null, contact=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.UserHandler - Response: <204 No Content,{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482;3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:09 GMT], Expires=[Mon, 27 Jul 2015 19:50:09 GMT], X-Frame-Options=[SAMEORIGIN],Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=7962DE99F72343771643822431BB5EA3; Path=/learn/api], X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Date=[Wed, 27 Jul 2016 19:50:09 GMT]}>\n[main] INFO bbdn.rest.services.CourseHandler - DELETE\n[main] INFO bbdn.rest.services.CourseHandler - URI is http://localhost:9876/learn/api/public/v1/courses/externalId:BBDN-Java-REST-Demo\n[main] INFO bbdn.rest.services.CourseHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.CourseHandler - Request Body: Course [id=null, uuid=null, externalId=null, dataSourceId=null, courseId=null, name=null, description=null, created=null, organization=false, ultraStatus=null, allowGuests=false, readOnly=false, termId=null, availability=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.CourseHandler - Response: <204 No Content,{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482;3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:09 GMT], Expires=[Mon, 27 Jul 2015 19:50:09 GMT], X-Frame-Options=[SAMEORIGIN],Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=D1F4182A949F2FE8FA7CA98C0BF59CB7; Path=/learn/api],X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Date=[Wed, 27 Jul 2016 19:50:09 GMT]}>\n[main] INFO bbdn.rest.services.TermHandler - DELETE\n[main] INFO bbdn.rest.services.TermHandler - URI is http://localhost:9876/learn/api/public/v1/terms/externalId:BBDN-TERM-JAVA\n[main] INFO bbdn.rest.services.TermHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.TermHandler - Request Body: Term [id=null,externalId=null, dataSourceId=null, name=null, description=null,availability=null, status=null, code=null, message=null,developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.TermHandler - Response: <204 No Content,{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482;3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:10 GMT], Expires=[Mon, 27 Jul 2015 19:50:10 GMT], X-Frame-Options=[SAMEORIGIN],Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=FF3871AC05EB0F3B28018DAFA0D7AB1D; Path=/learn/api],X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Date=[Wed, 27 Jul 2016 19:50:09 GMT]}>\n[main] INFO bbdn.rest.services.DatasourceHandler - DELETE\n[main] INFO bbdn.rest.services.DatasourceHandler - URI is http://localhost:9876/learn/api/public/v1/dataSources/externalId:BBDN-DSK-JAVA\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Headers: {Authorization=[Bearer uC5G2HvEsI1DWP24xD2lnaG35EQsenZs], Content-Type=[application/json]}\n[main] INFO bbdn.rest.services.DatasourceHandler - Request Body: Datasource [id=null, externalId=null, description=null, status=null, code=null, message=null, developerMessage=null, extrainfo=null]\n[main] INFO bbdn.rest.services.DatasourceHandler - Response: <204 No Content,{Server=[Apache-Coyote/1.1], P3P=[CP=\"CAO PSA OUR\"], X-Blackboard-appserver=[dev.bbdn.local], X-Blackboard-product=[Learn &#8482;3000.1.1-rel.7+a3f61d9], Pragma=[no-cache], Cache-Control=[no-cache, max-age=0, no-store, must-revalidate], Last-Modified=[Sat, 27 Jul 1996 19:50:10 GMT], Expires=[Mon, 27 Jul 2015 19:50:10 GMT], X-Frame-Options=[SAMEORIGIN],Content-Security-Policy=[frame-ancestors 'self'], Set-Cookie=[JSESSIONID=E7B5A007C1E329DFF0F8F477E580A4CB; Path=/learn/api],X-Blackboard-Context-Version=[3000.1.1-rel.5+0bc08ab], Content-Type=[application/json;charset=UTF-8], Date=[Wed, 27 Jul 2016 19:50:09 GMT]}>\n\nBUILD SUCCESSFUL\nTotal time: 7.356 secs\n"})}),"\n",(0,s.jsx)(a.h4,{id:"what-we-did-4",children:"What We Did"}),"\n",(0,s.jsx)(a.p,{children:"In this tutorial we built a Java command line application that creates, reads,\nupdates, and deletes the five core REST objects: datasources, terms, courses,\nusers, and memberships. Along the way, we learned how to institute OAuth,\ncreate HTTP messages and interact with the Learn REST APIs, how to\nuse Jackson to serialize and deserialize objects, and how to use Gradle to\nbuild and run command line Java applications."})]})}function u(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>o});var t=n(96540);const s={},l=t.createContext(s);function r(e){const a=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:a},e.children)}},45689:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-5-a10ef14e32bf1c98139aa0160acf99d9.png"},58890:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-9-2cfcbefa4433673bfb91566c50d0c966.png"},61145:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-2-a50d7e811f225fff79fe6312b2eb8c2b.png"},64240:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-3-d9a896370ea4f8968547265aebdbe7e7.png"},88180:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/java-command-line-7-336280f5c425c35d7bc01036ffb35153.png"}}]);